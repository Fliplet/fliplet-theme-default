/*****************************/
/*** FLIPLET DEFAULT THEME ***/
/********* CONTENTS **********/
/*****************************/
/*****************************
LINKS
MENUS
TABLES
******************************/

/* LINKS */
a {
  color: $linkColor;
  text-decoration: none;

  &:hover,
  &:focus,
  &:active:hover,
  &:active:focus {
    color: $linkHoverColor;
    text-decoration: none;
    outline: none;
  }

  @include above($tabletBreakpoint) {
    color: $linkColorTablet;

    &:hover,
    &:focus,
    &:active:hover,
    &:active:focus {
      color: $linkHoverColorTablet;
    }
  }

  @include above($desktopBreakpoint) {
    color: $linkColorDesktop;

    &:hover,
    &:focus,
    &:active:hover,
    &:active:focus {
      color: $linkHoverColorDesktop;
    }
  }
}

.btn.btn-link {
  color: $linkColor;
  text-decoration: none;

  &:hover,
  &:focus,
  &:active:hover,
  &:active:focus {
    color: $linkHoverColor;
    text-decoration: none;
    outline: none;
  }

  @include above($tabletBreakpoint) {
    color: $linkColorTablet;

    &:hover,
    &:focus,
    &:active:hover,
    &:active:focus {
      color: $linkHoverColorTablet;
    }
  }

  @include above($desktopBreakpoint) {
    color: $linkColorDesktop;

    &:hover,
    &:focus,
    &:active:hover,
    &:active:focus {
      color: $linkHoverColorDesktop;
    }
  }
}

/* MENUS */
.fl-bar-padding {
  .fl-viewport-header {
    border-bottom: none;
    border-top: none;
  }
}

/* TABLES */
.table {
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        padding: $cellPaddingTop $cellPaddingRight $cellPaddingBottom $cellPaddingLeft;

        // Styles for tablet
        @include above($tabletBreakpoint) {
          padding: $cellPaddingTopTablet $cellPaddingRightTablet $cellPaddingBottomTablet $cellPaddingLeftTablet;
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          padding: $cellPaddingTopDesktop $cellPaddingRightDesktop $cellPaddingBottomDesktop $cellPaddingLeftDesktop;
        }
      }
    }
  }
}

.table-bordered {
  @include borderOnly((
    borderSides: $tableBorderSides,
    borderWidth: $tableBorderWidth,
    borderStyle: $tableBorderStyle,
    borderColor: $tableBorder
  ));

  tr {
    @include borderOnly((
      borderSides: $rowBorderSides,
      borderWidth: $rowBorderWidth,
      borderStyle: $rowBorderStyle,
      borderColor: $rowBorder
    ));
  }

  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        @include borderOnly((
          borderSides: $cellBorderTopSides,
          borderWidth: $cellBorderTopWidth,
          borderStyle: $cellBorderTopStyle,
          borderColor: $cellBorderTop
        ));
      }
    }
  }

  // Styles for tablet
  @include above($tabletBreakpoint) {
    @include borderOnly((
      borderSides: $tableBorderSidesTablet,
      borderWidth: $tableBorderWidthTablet,
      borderStyle: $tableBorderStyleTablet,
      borderColor: $tableBorderTablet
    ));

    tr {
      @include borderOnly((
        borderSides: $rowBorderSidesTablet,
        borderWidth: $rowBorderWidthTablet,
        borderStyle: $rowBorderStyleTablet,
        borderColor: $rowBorderTablet
      ));
    }

    > thead,
    > tbody,
    > tfoot {
      > tr {
        > th,
        > td {
          @include borderOnly((
            borderSides: $cellBorderTopSidesTablet,
            borderWidth: $cellBorderTopWidthTablet,
            borderStyle: $cellBorderTopStyleTablet,
            borderColor: $cellBorderTopTablet
          ));
        }
      }
    }
  }

  // Styles for desktop
  @include above($desktopBreakpoint) {
    @include borderOnly((
      borderSides: $tableBorderSidesDesktop,
      borderWidth: $tableBorderWidthDesktop,
      borderStyle: $tableBorderStyleDesktop,
      borderColor: $tableBorderDesktop
    ));

    tr {
      @include borderOnly((
        borderSides: $rowBorderSidesDesktop,
        borderWidth: $rowBorderWidthDesktop,
        borderStyle: $rowBorderStyleDesktop,
        borderColor: $rowBorderDesktop
      ));
    }

    > thead,
    > tbody,
    > tfoot {
      > tr {
        > th,
        > td {
          @include borderOnly((
            borderSides: $cellBorderTopSidesDesktop,
            borderWidth: $cellBorderTopWidthDesktop,
            borderStyle: $cellBorderTopStyleDesktop,
            borderColor: $cellBorderTopDesktop
          ));
        }
      }
    }
  }
}

table,
table.mce-item-table {

  @include borderOnly((
    borderSides: $tableBorderSides,
    borderWidth: $tableBorderWidth,
    borderStyle: $tableBorderStyle,
    borderColor: $tableBorder
  ));

  // Styles for tablet
  @include above($tabletBreakpoint) {
    @include borderOnly((
      borderSides: $tableBorderSidesTablet,
      borderWidth: $tableBorderWidthTablet,
      borderStyle: $tableBorderStyleTablet,
      borderColor: $tableBorderTablet
    ));
  }

  // Styles for desktop
  @include above($desktopBreakpoint) {
    @include borderOnly((
      borderSides: $tableBorderSidesDesktop,
      borderWidth: $tableBorderWidthDesktop,
      borderStyle: $tableBorderStyleDesktop,
      borderColor: $tableBorderDesktop
    ));
  }

  tr {
    @include borderOnly((
      borderSides: $rowBorderSides,
      borderWidth: $rowBorderWidth,
      borderStyle: $rowBorderStyle,
      borderColor: $rowBorder
    ));

    // Styles for tablet
    @include above($tabletBreakpoint) {
      @include borderOnly((
        borderSides: $rowBorderSidesTablet,
        borderWidth: $rowBorderWidthTablet,
        borderStyle: $rowBorderStyleTablet,
        borderColor: $rowBorderTablet
      ));
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      @include borderOnly((
        borderSides: $rowBorderSidesDesktop,
        borderWidth: $rowBorderWidthDesktop,
        borderStyle: $rowBorderStyleDesktop,
        borderColor: $rowBorderDesktop
      ));
    }

    &:first-child {
      border-top: none;
    }
  }

  > thead ~ tbody,
  > thead ~ tfoot {
    tr:first-child {
      @include borderOnly((
        borderSides: $rowBorderSides,
        borderWidth: $rowBorderWidth,
        borderStyle: $rowBorderStyle,
        borderColor: $rowBorder
      ));

      // Styles for tablet
      @include above($tabletBreakpoint) {
        @include borderOnly((
          borderSides: $rowBorderSidesTablet,
          borderWidth: $rowBorderWidthTablet,
          borderStyle: $rowBorderStyleTablet,
          borderColor: $rowBorderTablet
        ));
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        @include borderOnly((
          borderSides: $rowBorderSidesDesktop,
          borderWidth: $rowBorderWidthDesktop,
          borderStyle: $rowBorderStyleDesktop,
          borderColor: $rowBorderDesktop
        ));
      }
    }
  }

  th,
  td,
  caption {
    padding: $cellPaddingTop $cellPaddingRight $cellPaddingBottom $cellPaddingLeft;

    @include borderOnly((
      borderSides: $cellBorderTopSides,
      borderWidth: $cellBorderTopWidth,
      borderStyle: $cellBorderTopStyle,
      borderColor: $cellBorderTop
    ));

    // Styles for tablet
    @include above($tabletBreakpoint) {
      padding: $cellPaddingTopTablet $cellPaddingRightTablet $cellPaddingBottomTablet $cellPaddingLeftTablet;

      @include borderOnly((
        borderSides: $cellBorderTopSidesTablet,
        borderWidth: $cellBorderTopWidthTablet,
        borderStyle: $cellBorderTopStyleTablet,
        borderColor: $cellBorderTopTablet
      ));
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      padding: $cellPaddingTopDesktop $cellPaddingRightDesktop $cellPaddingBottomDesktop $cellPaddingLeftDesktop;

      @include borderOnly((
        borderSides: $cellBorderTopSidesDesktop,
        borderWidth: $cellBorderTopWidthDesktop,
        borderStyle: $cellBorderTopStyleDesktop,
        borderColor: $cellBorderTopDesktop
      ));
    }
  }
}

html.no-touchevents.js-focus-visible {
  .focus-outline-active, .focus-outline {
    outline: none;

    &:focus {
      box-shadow: 0px 0px 0px $focusOutlineWidth $focusOutlineColor !important;
    }

    &:focus:not(.focus-visible) {
      box-shadow: none !important;
    }

    &:not(:focus-visible) {
      box-shadow: none !important;
    }

    &:focus-visible {
      box-shadow: 0px 0px 0px $focusOutlineWidth $focusOutlineColor !important;
    }

    @include above($tabletBreakpoint) {
      &:focus {
        box-shadow: 0px 0px 0px $focusOutlineWidthTablet $focusOutlineColorTablet !important;
      }
  
      &:focus:not(.focus-visible) {
        box-shadow: none !important;
      }
  
      &:not(:focus-visible) {
        box-shadow: none !important;
      }
  
      &:focus-visible {
        box-shadow: 0px 0px 0px $focusOutlineWidthTablet $focusOutlineColorTablet !important;
      }
    }

    @include above($desktopBreakpoint) {
      &:focus {
        box-shadow: 0px 0px 0px $focusOutlineWidthDesktop $focusOutlineColorDesktop !important;
      }
  
      &:focus:not(.focus-visible) {
        box-shadow: none !important;
      }
  
      &:not(:focus-visible) {
        box-shadow: none !important;
      }
  
      &:focus-visible {
        box-shadow: 0px 0px 0px $focusOutlineWidthDesktop $focusOutlineColorDesktop !important;
      }
    }
  }
}

// Remove outline for native devices

html.touchevents {
  .focus-outline {
    outline: none;
  }
}