@mixin loginRegistration($options: (), $widgetInstanceId: "", $widgetInstanceUUID: "") {
  $configuration: map-merge(
    (
      loginWidth: $loginWidth,
      loginMinWidth: $loginMinWidth,
      loginMaxWidth: $loginMaxWidth,
      loginMarginTop: $loginMarginTop,
      loginMarginRight: $loginMarginRight,
      loginMarginBottom: $loginMarginBottom,
      loginMarginLeft: $loginMarginLeft,
      loginPaddingTop: $loginPaddingTop,
      loginPaddingRight: $loginPaddingRight,
      loginPaddingBottom: $loginPaddingBottom,
      loginPaddingLeft: $loginPaddingLeft,
      chevronColor: $chevronColor,
      chevronSeparator: $chevronSeparator,
      fieldBorderSides: $fieldBorderSides,
      fieldBorderWidth: $fieldBorderWidth,
      fieldBorderStyle: $fieldBorderStyle,
      fieldBorder: $fieldBorder,
      fieldBorderRadius: $fieldBorderRadius,
      loginButtonWidth: $loginButtonWidth,
      loginButtonMinWidth: $loginButtonMinWidth,
      loginButtonMaxWidth: $loginButtonMaxWidth,
      loginButtonHeight: $loginButtonHeight,
      loginButtonMinHeight: $loginButtonMinHeight,
      loginButtonMaxHeight: $loginButtonMaxHeight,
      loginButtonMarginTop: $loginButtonMarginTop,
      loginButtonMarginRight: $loginButtonMarginRight,
      loginButtonMarginBottom: $loginButtonMarginBottom,
      loginButtonMarginLeft: $loginButtonMarginLeft,
      loginButtonPaddingTop: $loginButtonPaddingTop,
      loginButtonPaddingRight: $loginButtonPaddingRight,
      loginButtonPaddingBottom: $loginButtonPaddingBottom,
      loginButtonPaddingLeft: $loginButtonPaddingLeft,
      loginButtonTextFontFamily: $loginButtonTextFontFamily,
      loginButtonTextFontSize: $loginButtonTextFontSize,
      loginButtonFontWeight: $loginButtonFontWeight,
      loginButtonFontStyle: $loginButtonFontStyle,
      loginButtonLineHeight: $loginButtonLineHeight,
      loginButtonTextDecoration: $loginButtonTextDecoration,
      loginButtonColor: $loginButtonColor,
      loginButtonTextColor: $loginButtonTextColor,
      iconColor: $iconColor,
      loginButtonBorderSides: $loginButtonBorderSides,
      loginButtonBorderWidth: $loginButtonBorderWidth,
      loginButtonBorderStyle: $loginButtonBorderStyle,
      loginButtonBorderColor: $loginButtonBorderColor,
      loginButtonBorderRadius: $loginButtonBorderRadius,
      loginButtonShadowStyle: $loginButtonShadowStyle,
      loginButtonShadowXoffset: $loginButtonShadowXoffset,
      loginButtonShadowYoffset: $loginButtonShadowYoffset,
      loginButtonShadowBlur: $loginButtonShadowBlur,
      loginButtonShadowSpread: $loginButtonShadowSpread,
      loginButtonShadowColor: $loginButtonShadowColor,
      loginButtonHoverColor: $loginButtonHoverColor,
      loginButtonHoverTextColor: $loginButtonHoverTextColor,
      loginButtonHoverBorderSides: $loginButtonHoverBorderSides,
      loginButtonHoverBorderWidth: $loginButtonHoverBorderWidth,
      loginButtonHoverBorderStyle: $loginButtonHoverBorderStyle,
      loginButtonHoverBorderColor: $loginButtonHoverBorderColor,
      loginButtonHoverBorderRadius: $loginButtonHoverBorderRadius,
      loginButtonHoverShadowStyle: $loginButtonHoverShadowStyle,
      loginButtonHoverShadowXoffset: $loginButtonHoverShadowXoffset,
      loginButtonHoverShadowYoffset: $loginButtonHoverShadowYoffset,
      loginButtonHoverShadowBlur: $loginButtonHoverShadowBlur,
      loginButtonHoverShadowSpread: $loginButtonHoverShadowSpread,
      loginButtonHoverShadowColor: $loginButtonHoverShadowColor,
      loginWidthTablet: $loginWidthTablet,
      loginMinWidthTablet: $loginMinWidthTablet,
      loginMaxWidthTablet: $loginMaxWidthTablet,
      loginMarginTopTablet: $loginMarginTopTablet,
      loginMarginRightTablet: $loginMarginRightTablet,
      loginMarginBottomTablet: $loginMarginBottomTablet,
      loginMarginLeftTablet: $loginMarginLeftTablet,
      loginPaddingTopTablet: $loginPaddingTopTablet,
      loginPaddingRightTablet: $loginPaddingRightTablet,
      loginPaddingBottomTablet: $loginPaddingBottomTablet,
      loginPaddingLeftTablet: $loginPaddingLeftTablet,
      chevronColorTablet: $chevronColorTablet,
      chevronSeparatorTablet: $chevronSeparatorTablet,
      fieldBorderSidesTablet: $fieldBorderSidesTablet,
      fieldBorderWidthTablet: $fieldBorderWidthTablet,
      fieldBorderStyleTablet: $fieldBorderStyleTablet,
      fieldBorderTablet: $fieldBorderTablet,
      fieldBorderRadiusTablet: $fieldBorderRadiusTablet,
      loginButtonWidthTablet: $loginButtonWidthTablet,
      loginButtonMinWidthTablet: $loginButtonMinWidthTablet,
      loginButtonMaxWidthTablet: $loginButtonMaxWidthTablet,
      loginButtonHeightTablet: $loginButtonHeightTablet,
      loginButtonMinHeightTablet: $loginButtonMinHeightTablet,
      loginButtonMaxHeightTablet: $loginButtonMaxHeightTablet,
      loginButtonMarginTopTablet: $loginButtonMarginTopTablet,
      loginButtonMarginRightTablet: $loginButtonMarginRightTablet,
      loginButtonMarginBottomTablet: $loginButtonMarginBottomTablet,
      loginButtonMarginLeftTablet: $loginButtonMarginLeftTablet,
      loginButtonPaddingTopTablet: $loginButtonPaddingTopTablet,
      loginButtonPaddingRightTablet: $loginButtonPaddingRightTablet,
      loginButtonPaddingBottomTablet: $loginButtonPaddingBottomTablet,
      loginButtonPaddingLeftTablet: $loginButtonPaddingLeftTablet,
      loginButtonTextFontFamilyTablet: $loginButtonTextFontFamilyTablet,
      loginButtonTextFontSizeTablet: $loginButtonTextFontSizeTablet,
      loginButtonFontWeightTablet: $loginButtonFontWeightTablet,
      loginButtonFontStyleTablet: $loginButtonFontStyleTablet,
      loginButtonLineHeightTablet: $loginButtonLineHeightTablet,
      loginButtonTextDecorationTablet: $loginButtonTextDecorationTablet,
      loginButtonColorTablet: $loginButtonColorTablet,
      loginButtonTextColorTablet: $loginButtonTextColorTablet,
      iconColorTablet: $iconColorTablet,
      loginButtonBorderSidesTablet: $loginButtonBorderSidesTablet,
      loginButtonBorderWidthTablet: $loginButtonBorderWidthTablet,
      loginButtonBorderStyleTablet: $loginButtonBorderStyleTablet,
      loginButtonBorderColorTablet: $loginButtonBorderColorTablet,
      loginButtonBorderRadiusTablet: $loginButtonBorderRadiusTablet,
      loginButtonShadowStyleTablet: $loginButtonShadowStyleTablet,
      loginButtonShadowXoffsetTablet: $loginButtonShadowXoffsetTablet,
      loginButtonShadowYoffsetTablet: $loginButtonShadowYoffsetTablet,
      loginButtonShadowBlurTablet: $loginButtonShadowBlurTablet,
      loginButtonShadowSpreadTablet: $loginButtonShadowSpreadTablet,
      loginButtonShadowColorTablet: $loginButtonShadowColorTablet,
      loginButtonHoverColorTablet: $loginButtonHoverColorTablet,
      loginButtonHoverTextColorTablet: $loginButtonHoverTextColorTablet,
      loginButtonHoverBorderSidesTablet: $loginButtonHoverBorderSidesTablet,
      loginButtonHoverBorderWidthTablet: $loginButtonHoverBorderWidthTablet,
      loginButtonHoverBorderStyleTablet: $loginButtonHoverBorderStyleTablet,
      loginButtonHoverBorderColorTablet: $loginButtonHoverBorderColorTablet,
      loginButtonHoverBorderRadiusTablet: $loginButtonHoverBorderRadiusTablet,
      loginButtonHoverShadowStyleTablet: $loginButtonHoverShadowStyleTablet,
      loginButtonHoverShadowXoffsetTablet: $loginButtonHoverShadowXoffsetTablet,
      loginButtonHoverShadowYoffsetTablet: $loginButtonHoverShadowYoffsetTablet,
      loginButtonHoverShadowBlurTablet: $loginButtonHoverShadowBlurTablet,
      loginButtonHoverShadowSpreadTablet: $loginButtonHoverShadowSpreadTablet,
      loginButtonHoverShadowColorTablet: $loginButtonHoverShadowColorTablet,
      loginButtonFontStyleDesktop: $loginButtonFontStyleDesktop,
      loginButtonLineHeightDesktop: $loginButtonLineHeightDesktop,
      loginButtonTextDecorationDesktop: $loginButtonTextDecorationDesktop,
      loginButtonColorDesktop: $loginButtonColorDesktop,
      loginButtonTextColorDesktop: $loginButtonTextColorDesktop,
      iconColorDesktop: $iconColorDesktop,
      loginButtonBorderSidesDesktop: $loginButtonBorderSidesDesktop,
      loginButtonBorderWidthDesktop: $loginButtonBorderWidthDesktop,
      loginButtonBorderStyleDesktop: $loginButtonBorderStyleDesktop,
      loginButtonBorderColorDesktop: $loginButtonBorderColorDesktop,
      loginButtonBorderRadiusDesktop: $loginButtonBorderRadiusDesktop,
      loginButtonShadowStyleDesktop: $loginButtonShadowStyleDesktop,
      loginButtonShadowXoffsetDesktop: $loginButtonShadowXoffsetDesktop,
      loginButtonShadowYoffsetDesktop: $loginButtonShadowYoffsetDesktop,
      loginButtonShadowBlurDesktop: $loginButtonShadowBlurDesktop,
      loginButtonShadowSpreadDesktop: $loginButtonShadowSpreadDesktop,
      loginButtonShadowColorDesktop: $loginButtonShadowColorDesktop,
      loginButtonHoverColorDesktop: $loginButtonHoverColorDesktop,
      loginButtonHoverTextColorDesktop: $loginButtonHoverTextColorDesktop,
      loginButtonHoverBorderSidesDesktop: $loginButtonHoverBorderSidesDesktop,
      loginButtonHoverBorderWidthDesktop: $loginButtonHoverBorderWidthDesktop,
      loginButtonHoverBorderStyleDesktop: $loginButtonHoverBorderStyleDesktop,
      loginButtonHoverBorderColorDesktop: $loginButtonHoverBorderColorDesktop,
      loginButtonHoverBorderRadiusDesktop: $loginButtonHoverBorderRadiusDesktop,
      loginButtonHoverShadowStyleDesktop: $loginButtonHoverShadowStyleDesktop,
      loginButtonWidthDesktop: $loginButtonWidthDesktop,
      loginButtonMinWidthDesktop: $loginButtonMinWidthDesktop,
      loginButtonMaxWidthDesktop: $loginButtonMaxWidthDesktop,
      loginButtonHeightDesktop: $loginButtonHeightDesktop,
      loginButtonMinHeightDesktop: $loginButtonMinHeightDesktop,
      loginButtonMaxHeightDesktop: $loginButtonMaxHeightDesktop,
      loginButtonMarginTopDesktop: $loginButtonMarginTopDesktop,
      loginButtonMarginRightDesktop: $loginButtonMarginRightDesktop,
      loginButtonMarginBottomDesktop: $loginButtonMarginBottomDesktop,
      loginButtonMarginLeftDesktop: $loginButtonMarginLeftDesktop,
      loginButtonPaddingTopDesktop: $loginButtonPaddingTopDesktop,
      loginButtonPaddingRightDesktop: $loginButtonPaddingRightDesktop,
      loginButtonPaddingBottomDesktop: $loginButtonPaddingBottomDesktop,
      loginButtonPaddingLeftDesktop: $loginButtonPaddingLeftDesktop,
      loginButtonTextFontFamilyDesktop: $loginButtonTextFontFamilyDesktop,
      loginButtonTextFontSizeDesktop: $loginButtonTextFontSizeDesktop,
      loginButtonFontWeightDesktop: $loginButtonFontWeightDesktop,
      loginButtonHoverShadowColorDesktop: $loginButtonHoverShadowColorDesktop,
      loginButtonHoverShadowSpreadDesktop: $loginButtonHoverShadowSpreadDesktop,
      loginButtonHoverShadowBlurDesktop: $loginButtonHoverShadowBlurDesktop,
      loginButtonHoverShadowYoffsetDesktop: $loginButtonHoverShadowYoffsetDesktop,
      loginButtonHoverShadowXoffsetDesktop: $loginButtonHoverShadowXoffsetDesktop,
      loginWidthDesktop: $loginWidthDesktop,
      loginMinWidthDesktop: $loginMinWidthDesktop,
      loginMaxWidthDesktop: $loginMaxWidthDesktop,
      loginMarginTopDesktop: $loginMarginTopDesktop,
      loginMarginRightDesktop: $loginMarginRightDesktop,
      loginMarginBottomDesktop: $loginMarginBottomDesktop,
      loginMarginLeftDesktop: $loginMarginLeftDesktop,
      loginPaddingTopDesktop: $loginPaddingTopDesktop,
      loginPaddingRightDesktop: $loginPaddingRightDesktop,
      loginPaddingBottomDesktop: $loginPaddingBottomDesktop,
      loginPaddingLeftDesktop: $loginPaddingLeftDesktop,
      chevronColorDesktop: $chevronColorDesktop,
      chevronSeparatorDesktop: $chevronSeparatorDesktop,
      fieldBorderSidesDesktop: $fieldBorderSidesDesktop,
      fieldBorderWidthDesktop: $fieldBorderWidthDesktop,
      fieldBorderStyleDesktop: $fieldBorderStyleDesktop,
      fieldBorderDesktop: $fieldBorderDesktop,
      fieldBorderRadiusDesktop: $fieldBorderRadiusDesktop
    ),
    $options
  );

  $instanceSelectorOne: '[data-widget-package="com.fliplet.login"]';
  $instanceSelectorTwo: '[data-widget-package="com.fliplet.login-data-source"]';
  $instanceSelectorThree: '[data-widget-package="com.fliplet.login.saml2"]';
  $instanceSelectorFour: '[data-widget-package="com.fliplet.email-validation"]';
  $instanceSelectorFive: '[data-widget-package="com.fliplet.sms-verfication"]';
  @if $widgetInstanceUUID != "" {
    $instanceSelectorOne: '#{$instanceSelectorOne}[data-uuid="#{$widgetInstanceUUID}"]';
    $instanceSelectorTwo: '#{$instanceSelectorTwo}[data-uuid="#{$widgetInstanceUUID}"]';
    $instanceSelectorThree: '#{$instanceSelectorThree}[data-uuid="#{$widgetInstanceUUID}"]';
    $instanceSelectorFour: '#{$instanceSelectorFour}[data-uuid="#{$widgetInstanceUUID}"]';
    $instanceSelectorFive: '#{$instanceSelectorFive}[data-uuid="#{$widgetInstanceUUID}"]';
  } @else if $widgetInstanceId != "" {
    $instanceSelectorOne: '#{$instanceSelectorOne}[data-id="#{$widgetInstanceId}"]';
    $instanceSelectorTwo: '#{$instanceSelectorTwo}[data-id="#{$widgetInstanceId}"]';
    $instanceSelectorThree: '#{$instanceSelectorThree}[data-id="#{$widgetInstanceId}"]';
    $instanceSelectorFour: '#{$instanceSelectorFour}[data-id="#{$widgetInstanceId}"]';
    $instanceSelectorFive: '#{$instanceSelectorFive}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelectorOne},
  #{$instanceSelectorTwo},
  #{$instanceSelectorThree},
  #{$instanceSelectorFour},
  #{$instanceSelectorFive} {
    width: map-get($configuration, loginWidth);
    min-width: map-get($configuration, loginMinWidth);
    max-width: map-get($configuration, loginMaxWidth);
    margin: map-get($configuration, loginMarginTop) map-get($configuration, loginMarginRight)
      map-get($configuration, loginMarginBottom) map-get($configuration, loginMarginLeft);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      width: map-get($configuration, loginWidthTablet);
      min-width: map-get($configuration, loginMinWidthTablet);
      max-width: map-get($configuration, loginMaxWidthTablet);
      margin: map-get($configuration, loginMarginTopTablet)
        map-get($configuration, loginMarginRightTablet)
        map-get($configuration, loginMarginBottomTablet)
        map-get($configuration, loginMarginLeftTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      width: map-get($configuration, loginWidthDesktop);
      min-width: map-get($configuration, loginMinWidthDesktop);
      max-width: map-get($configuration, loginMaxWidthDesktop);
      margin: map-get($configuration, loginMarginTopDesktop)
        map-get($configuration, loginMarginRightDesktop)
        map-get($configuration, loginMarginBottomDesktop)
        map-get($configuration, loginMarginLeftDesktop);
    }

    .sso-login,
    [data-login-ds-id],
    [data-login-id],
    .fl-sms-verification,
    .fl-email-verification {
      padding: map-get($configuration, loginPaddingTop) map-get($configuration, loginPaddingRight)
        map-get($configuration, loginPaddingBottom) map-get($configuration, loginPaddingLeft);

      .fl-login-form .fl-email:before,
      .fl-login-form .fl-password:before {
        color: map-get($configuration, iconColor);
        border-right-color: map-get($configuration, iconColor);
      }

      .fl-login-form .btn-login,
      .btn-primary {
        width: map-get($configuration, loginButtonWidth);
        background-color: map-get($configuration, loginButtonColor);
        color: map-get($configuration, loginButtonTextColor);
        min-width: map-get($configuration, loginButtonMinWidth);
        max-width: map-get($configuration, loginButtonMaxWidth);
        height: map-get($configuration, loginButtonHeight);
        min-height: map-get($configuration, loginButtonMinHeight);
        max-height: map-get($configuration, loginButtonMaxHeight);
        line-height: map-get($configuration, loginButtonLineHeight);
        text-decoration: map-get($configuration, loginButtonTextDecoration);
        border-radius: map-get($configuration, loginButtonBorderRadius);
        font-family: map-get($configuration, loginButtonTextFontFamily);
        font-size: map-get($configuration, loginButtonTextFontSize);
        font-weight: map-get($configuration, loginButtonFontWeight);
        font-style: map-get($configuration, loginButtonFontStyle);
        margin: map-get($configuration, loginButtonMarginTop)
          map-get($configuration, loginButtonMarginRight)
          map-get($configuration, loginButtonMarginBottom)
          map-get($configuration, loginButtonMarginLeft);
        padding: map-get($configuration, loginButtonPaddingTop)
          map-get($configuration, loginButtonPaddingRight)
          map-get($configuration, loginButtonPaddingBottom)
          map-get($configuration, loginButtonPaddingLeft);
        @include borderOnly(
          (
            borderSides: map-get($configuration, loginButtonBorderSides),
            borderWidth: map-get($configuration, loginButtonBorderWidth),
            borderStyle: map-get($configuration, loginButtonBorderStyle),
            borderColor: map-get($configuration, loginButtonBorderColor)
          )
        );
        @include shadowOnly(
          (
            shadowStyle: map-get($configuration, loginButtonShadowStyle),
            shadowXOffset: map-get($configuration, loginButtonShadowXoffset),
            shadowYOffset: map-get($configuration, loginButtonShadowYoffset),
            shadowBlur: map-get($configuration, loginButtonShadowBlur),
            shadowSpread: map-get($configuration, loginButtonShadowSpread),
            shadowColor: map-get($configuration, loginButtonShadowColor)
          )
        );

        &:active:hover {
          background-color: map-get($configuration, loginButtonHoverColor);
          color: map-get($configuration, loginButtonHoverTextColor);
          @include borderOnly(
            (
              borderSides: map-get($configuration, loginButtonHoverBorderSides),
              borderWidth: map-get($configuration, loginButtonHoverBorderWidth),
              borderStyle: map-get($configuration, loginButtonHoverBorderStyle),
              borderColor: map-get($configuration, loginButtonHoverBorderColor)
            )
          );
          @include shadowOnly(
            (
              shadowStyle: map-get($configuration, loginButtonShadowStyle),
              shadowXOffset: map-get($configuration, loginButtonShadowXoffset),
              shadowYOffset: map-get($configuration, loginButtonShadowYoffset),
              shadowBlur: map-get($configuration, loginButtonShadowBlur),
              shadowSpread: map-get($configuration, loginButtonShadowSpread),
              shadowColor: map-get($configuration, loginButtonShadowColor)
            )
          );
        }
      }

      .fl-login-form .btn-signup,
      .btn-secondary {
        width: map-get($configuration, loginButtonWidth);
        min-width: map-get($configuration, loginButtonMinWidth);
        max-width: map-get($configuration, loginButtonMaxWidth);
        height: map-get($configuration, loginButtonHeight);
        min-height: map-get($configuration, loginButtonMinHeight);
        max-height: map-get($configuration, loginButtonMaxHeight);
        line-height: map-get($configuration, loginButtonLineHeight);
        text-decoration: map-get($configuration, loginButtonTextDecoration);
        border-radius: map-get($configuration, loginButtonBorderRadius);
        font-family: map-get($configuration, loginButtonTextFontFamily);
        font-size: map-get($configuration, loginButtonTextFontSize);
        font-weight: map-get($configuration, loginButtonFontWeight);
        font-style: map-get($configuration, loginButtonFontStyle);
        margin: map-get($configuration, loginButtonMarginTop)
          map-get($configuration, loginButtonMarginRight)
          map-get($configuration, loginButtonMarginBottom)
          map-get($configuration, loginButtonMarginLeft);
        padding: map-get($configuration, loginButtonPaddingTop)
          map-get($configuration, loginButtonPaddingRight)
          map-get($configuration, loginButtonPaddingBottom)
          map-get($configuration, loginButtonPaddingLeft);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        padding: map-get($configuration, loginPaddingTopTablet)
          map-get($configuration, loginPaddingRightTablet)
          map-get($configuration, loginPaddingBottomTablet)
          map-get($configuration, loginPaddingLeftTablet);

        .fl-login-form .fl-email:before,
        .fl-login-form .fl-password:before {
          color: map-get($configuration, iconColorTablet);
          border-right-color: map-get($configuration, iconColorTablet);
        }

        .fl-login-form .btn-login {
          width: map-get($configuration, loginButtonWidthTablet);
          background-color: map-get($configuration, loginButtonColorTablet);
          color: map-get($configuration, loginButtonTextColorTablet);
          min-width: map-get($configuration, loginButtonMinWidthTablet);
          max-width: map-get($configuration, loginButtonMaxWidthTablet);
          height: map-get($configuration, loginButtonHeightTablet);
          min-height: map-get($configuration, loginButtonMinHeightTablet);
          max-height: map-get($configuration, loginButtonMaxHeightTablet);
          line-height: map-get($configuration, loginButtonLineHeightTablet);
          text-decoration: map-get($configuration, loginButtonTextDecorationTablet);
          border-radius: map-get($configuration, loginButtonBorderRadiusTablet);
          font-family: map-get($configuration, loginButtonTextFontFamilyTablet);
          font-size: map-get($configuration, loginButtonTextFontSizeTablet);
          font-weight: map-get($configuration, loginButtonFontWeightTablet);
          font-style: map-get($configuration, loginButtonFontStyleTablet);
          margin: map-get($configuration, loginButtonMarginTopTablet)
            map-get($configuration, loginButtonMarginRightTablet)
            map-get($configuration, loginButtonMarginBottomTablet)
            map-get($configuration, loginButtonMarginLeftTablet);
          padding: map-get($configuration, loginButtonPaddingTopTablet)
            map-get($configuration, loginButtonPaddingRightTablet)
            map-get($configuration, loginButtonPaddingBottomTablet)
            map-get($configuration, loginButtonPaddingLeftTablet);
          @include borderOnly(
            (
              borderSides: map-get($configuration, loginButtonBorderSidesTablet),
              borderWidth: map-get($configuration, loginButtonBorderWidthTablet),
              borderStyle: map-get($configuration, loginButtonBorderStyleTablet),
              borderColor: map-get($configuration, loginButtonBorderColorTablet)
            )
          );
          @include shadowOnly(
            (
              shadowStyle: map-get($configuration, loginButtonShadowStyleTablet),
              shadowXOffset: map-get($configuration, loginButtonShadowXoffsetTablet),
              shadowYOffset: map-get($configuration, loginButtonShadowYoffsetTablet),
              shadowBlur: map-get($configuration, loginButtonShadowBlurTablet),
              shadowSpread: map-get($configuration, loginButtonShadowSpreadTablet),
              shadowColor: map-get($configuration, loginButtonShadowColorTablet)
            )
          );

          &:active:hover {
            background-color: map-get($configuration, loginButtonHoverColorTablet);
            color: map-get($configuration, loginButtonHoverTextColorTablet);
            @include borderOnly(
              (
                borderSides: map-get($configuration, loginButtonHoverBorderSidesTablet),
                borderWidth: map-get($configuration, loginButtonHoverBorderWidthTablet),
                borderStyle: map-get($configuration, loginButtonHoverBorderStyleTablet),
                borderColor: map-get($configuration, loginButtonHoverBorderColorTablet)
              )
            );
            @include shadowOnly(
              (
                shadowStyle: map-get($configuration, loginButtonShadowStyleTablet),
                shadowXOffset: map-get($configuration, loginButtonShadowXoffsetTablet),
                shadowYOffset: map-get($configuration, loginButtonShadowYoffsetTablet),
                shadowBlur: map-get($configuration, loginButtonShadowBlurTablet),
                shadowSpread: map-get($configuration, loginButtonShadowSpreadTablet),
                shadowColor: map-get($configuration, loginButtonShadowColorTablet)
              )
            );
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        padding: map-get($configuration, loginPaddingTopDesktop)
          map-get($configuration, loginPaddingRightDesktop)
          map-get($configuration, loginPaddingBottomDesktop)
          map-get($configuration, loginPaddingLeftDesktop);

        .fl-login-form .fl-email:before,
        .fl-login-form .fl-password:before {
          color: map-get($configuration, iconColorDesktop);
          border-right-color: map-get($configuration, iconColorDesktop);
        }

        .fl-login-form .btn-login {
          width: map-get($configuration, loginButtonWidthDesktop);
          background-color: map-get($configuration, loginButtonColorDesktop);
          color: map-get($configuration, loginButtonTextColorDesktop);
          min-width: map-get($configuration, loginButtonMinWidthDesktop);
          max-width: map-get($configuration, loginButtonMaxWidthDesktop);
          height: map-get($configuration, loginButtonHeightDesktop);
          min-height: map-get($configuration, loginButtonMinHeightDesktop);
          max-height: map-get($configuration, loginButtonMaxHeightDesktop);
          line-height: map-get($configuration, loginButtonLineHeightDesktop);
          text-decoration: map-get($configuration, loginButtonTextDecorationDesktop);
          border-radius: map-get($configuration, loginButtonBorderRadiusDesktop);
          font-family: map-get($configuration, loginButtonTextFontFamilyDesktop);
          font-size: map-get($configuration, loginButtonTextFontSizeDesktop);
          font-weight: map-get($configuration, loginButtonFontWeightDesktop);
          font-style: map-get($configuration, loginButtonFontStyleDesktop);
          margin: map-get($configuration, loginButtonMarginTopDesktop)
            map-get($configuration, loginButtonMarginRightDesktop)
            map-get($configuration, loginButtonMarginBottomDesktop)
            map-get($configuration, loginButtonMarginLeftDesktop);
          padding: map-get($configuration, loginButtonPaddingTopDesktop)
            map-get($configuration, loginButtonPaddingRightDesktop)
            map-get($configuration, loginButtonPaddingBottomDesktop)
            map-get($configuration, loginButtonPaddingLeftDesktop);
          @include borderOnly(
            (
              borderSides: map-get($configuration, loginButtonBorderSidesDesktop),
              borderWidth: map-get($configuration, loginButtonBorderWidthDesktop),
              borderStyle: map-get($configuration, loginButtonBorderStyleDesktop),
              borderColor: map-get($configuration, loginButtonBorderColorDesktop)
            )
          );
          @include shadowOnly(
            (
              shadowStyle: map-get($configuration, loginButtonShadowStyleDesktop),
              shadowXOffset: map-get($configuration, loginButtonShadowXoffsetDesktop),
              shadowYOffset: map-get($configuration, loginButtonShadowYoffsetDesktop),
              shadowBlur: map-get($configuration, loginButtonShadowBlurDesktop),
              shadowSpread: map-get($configuration, loginButtonShadowSpread),
              shadowColor: map-get($configuration, loginButtonShadowColorDesktop)
            )
          );

          &:active:hover {
            background-color: map-get($configuration, loginButtonHoverColorDesktop);
            color: map-get($configuration, loginButtonHoverTextColorDesktop);
            @include borderOnly(
              (
                borderSides: map-get($configuration, loginButtonHoverBorderSidesDesktop),
                borderWidth: map-get($configuration, loginButtonHoverBorderWidthDesktop),
                borderStyle: map-get($configuration, loginButtonHoverBorderStyleDesktop),
                borderColor: map-get($configuration, loginButtonHoverBorderColorDesktop)
              )
            );
            @include shadowOnly(
              (
                shadowStyle: map-get($configuration, loginButtonShadowStyleDesktop),
                shadowXOffset: map-get($configuration, loginButtonShadowXoffsetDesktop),
                shadowYOffset: map-get($configuration, loginButtonShadowYoffsetDesktop),
                shadowBlur: map-get($configuration, loginButtonShadowBlurDesktop),
                shadowSpread: map-get($configuration, loginButtonShadowSpreadDesktop),
                shadowColor: map-get($configuration, loginButtonShadowColorDesktop)
              )
            );
          }
        }
      }
    }

    .state input.form-control,
    .fl-login-form input.form-control {
      border: none;
      @include borderOnly(
        (
          borderSides: map-get($configuration, fieldBorderSides),
          borderWidth: map-get($configuration, fieldBorderWidth),
          borderStyle: map-get($configuration, fieldBorderStyle),
          borderColor: map-get($configuration, fieldBorder)
        )
      );
      border-radius: map-get($configuration, fieldBorderRadius);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        @include borderOnly(
          (
            borderSides: map-get($configuration, fieldBorderSidesTablet),
            borderWidth: map-get($configuration, fieldBorderWidthTablet),
            borderStyle: map-get($configuration, fieldBorderStyleTablet),
            borderColor: map-get($configuration, fieldBorderTablet)
          )
        );
        border-radius: map-get($configuration, fieldBorderRadiusTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        @include borderOnly(
          (
            borderSides: map-get($configuration, fieldBorderSidesDesktop),
            borderWidth: map-get($configuration, fieldBorderWidthDesktop),
            borderStyle: map-get($configuration, fieldBorderStyleDesktop),
            borderColor: map-get($configuration, fieldBorderDesktop)
          )
        );
        border-radius: map-get($configuration, fieldBorderRadiusDesktop);
      }
    }

    .fl-login-form .fl-email:before,
    .fl-login-form .fl-password:before {
      color: $chevronSeparator;
      border-right-color: $chevronSeparator;

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: $chevronSeparatorTablet;
        border-right-color: $chevronSeparatorTablet;
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: $chevronSeparatorDesktop;
        border-right-color: $chevronSeparatorDesktop;
      }
    }

    .state {
      .back {
        border-right: 1px solid map-get($configuration, chevronSeparator);
        color: map-get($configuration, chevronColor);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          border-right: 1px solid map-get($configuration, chevronSeparatorTablet);
          color: map-get($configuration, chevronColorTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          border-right: 1px solid map-get($configuration, chevronSeparatorDesktop);
          color: map-get($configuration, chevronColorDesktop);
        }
      }
    }
  }
}

@include loginRegistration();
