@mixin menuPushIn($options: (), $widgetInstanceId: "", $widgetInstanceUUID: "") {
  $configuration: map-merge(
    (
      menuPushFont: $menuPushFont,
      menuPushFontSize: $menuPushFontSize,
      menuPushFontWeight: $menuPushFontWeight,
      menuPushFontStyle: $menuPushFontStyle,
      menuPushFontDecoration: $menuPushFontDecoration,
      menuPushTopNavBackground: $menuPushTopNavBackground,
      menuPushTopNavFontColor: $menuPushTopNavFontColor,
      menuPushTopNavBorderSides: $menuPushTopNavBorderSides,
      menuPushTopNavBorderWidth: $menuPushTopNavBorderWidth,
      menuPushTopNavBorderStyle: $menuPushTopNavBorderStyle,
      menuPushTopNavBorderColor: $menuPushTopNavBorderColor,
      menuPushShadowStyle: $menuPushShadowStyle,
      menuPushShadowXoffset: $menuPushShadowXoffset,
      menuPushShadowYoffset: $menuPushShadowYoffset,
      menuPushShadowBlur: $menuPushShadowBlur,
      menuPushShadowSpread: $menuPushShadowSpread,
      menuPushTopNavFontShadowColor: $menuPushTopNavFontShadowColor,
      menuPushBackButtonColor: $menuPushBackButtonColor,
      menuPushButtonColor: $menuPushButtonColor,
      menuPushBackgroundColor: $menuPushBackgroundColor,
      menuPushFontColor: $menuPushFontColor,
      menuPushCloseButtonColor: $menuPushCloseButtonColor,
      menuPushFooterFontColor: $menuPushFooterFontColor,
      menuPushFontTablet: $menuPushFontTablet,
      menuPushFontSizeTablet: $menuPushFontSizeTablet,
      menuPushFontWeightTablet: $menuPushFontWeightTablet,
      menuPushFontStyleTablet: $menuPushFontStyleTablet,
      menuPushFontDecorationTablet: $menuPushFontDecorationTablet,
      menuPushTopNavBackgroundTablet: $menuPushTopNavBackgroundTablet,
      menuPushTopNavFontColorTablet: $menuPushTopNavFontColorTablet,
      menuPushTopNavBorderSidesTablet: $menuPushTopNavBorderSidesTablet,
      menuPushTopNavBorderWidthTablet: $menuPushTopNavBorderWidthTablet,
      menuPushTopNavBorderStyleTablet: $menuPushTopNavBorderStyleTablet,
      menuPushTopNavBorderColorTablet: $menuPushTopNavBorderColorTablet,
      menuPushShadowStyleTablet: $menuPushShadowStyleTablet,
      menuPushShadowXoffsetTablet: $menuPushShadowXoffsetTablet,
      menuPushShadowYoffsetTablet: $menuPushShadowYoffsetTablet,
      menuPushShadowBlurTablet: $menuPushShadowBlurTablet,
      menuPushShadowSpreadTablet: $menuPushShadowSpreadTablet,
      menuPushTopNavFontShadowColorTablet: $menuPushTopNavFontShadowColorTablet,
      menuPushBackButtonColorTablet: $menuPushBackButtonColorTablet,
      menuPushButtonColorTablet: $menuPushButtonColorTablet,
      menuPushBackgroundColorTablet: $menuPushBackgroundColorTablet,
      menuPushFontColorTablet: $menuPushFontColorTablet,
      menuPushCloseButtonColorTablet: $menuPushCloseButtonColorTablet,
      menuPushFooterFontColorTablet: $menuPushFooterFontColorTablet,
      menuPushFontDesktop: $menuPushFontDesktop,
      menuPushFontSizeDesktop: $menuPushFontSizeDesktop,
      menuPushFontWeightDesktop: $menuPushFontWeightDesktop,
      menuPushFontStyleDesktop: $menuPushFontStyleDesktop,
      menuPushFontDecorationDesktop: $menuPushFontDecorationDesktop,
      menuPushTopNavBackgroundDesktop: $menuPushTopNavBackgroundDesktop,
      menuPushTopNavFontColorDesktop: $menuPushTopNavFontColorDesktop,
      menuPushTopNavBorderSidesDesktop: $menuPushTopNavBorderSidesDesktop,
      menuPushTopNavBorderWidthDesktop: $menuPushTopNavBorderWidthDesktop,
      menuPushTopNavBorderStyleDesktop: $menuPushTopNavBorderStyleDesktop,
      menuPushTopNavBorderColorDesktop: $menuPushTopNavBorderColorDesktop,
      menuPushShadowStyleDesktop: $menuPushShadowStyleDesktop,
      menuPushShadowXoffsetDesktop: $menuPushShadowXoffsetDesktop,
      menuPushShadowYoffsetDesktop: $menuPushShadowYoffsetDesktop,
      menuPushShadowBlurDesktop: $menuPushShadowBlurDesktop,
      menuPushShadowSpreadDesktop: $menuPushShadowSpreadDesktop,
      menuPushTopNavFontShadowColorDesktop: $menuPushTopNavFontShadowColorDesktop,
      menuPushBackButtonColorDesktop: $menuPushBackButtonColorDesktop,
      menuPushButtonColorDesktop: $menuPushButtonColorDesktop,
      menuPushBackgroundColorDesktop: $menuPushBackgroundColorDesktop,
      menuPushFontColorDesktop: $menuPushFontColorDesktop,
      menuPushCloseButtonColorDesktop: $menuPushCloseButtonColorDesktop,
      menuPushFooterFontColorDesktop: $menuPushFooterFontColorDesktop
    ),
    $options
  );

  $instanceSelector: '[data-widget-package="com.fliplet.menu.push-in"]';
  @if $widgetInstanceUUID != "" {
    $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
  } @else if $widgetInstanceId != "" {
    $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelector} {
    .fl-viewport-header {
      text-shadow: none;

      @include viewportHeader(
        (
          headerBackgroundColor: map-get($configuration, menuPushTopNavBackground),
          headerTextColor: map-get($configuration, menuPushTopNavFontColor),
          headerBorderSides: map-get($configuration, menuPushTopNavBorderSides),
          headerBorderWidth: map-get($configuration, menuPushTopNavBorderWidth),
          headerBorderStyle: map-get($configuration, menuPushTopNavBorderStyle),
          headerBorderColor: map-get($configuration, menuPushTopNavBorderColor),
          headerShadowStyle: map-get($configuration, menuPushShadowStyle),
          headerShadowXOffset: map-get($configuration, menuPushShadowXoffset),
          headerShadowYOffset: map-get($configuration, menuPushShadowYoffset),
          headerShadowBlur: map-get($configuration, menuPushShadowBlur),
          headerShadowSpread: map-get($configuration, menuPushShadowSpread),
          headerShadowColor: map-get($configuration, menuPushTopNavFontShadowColor)
        )
      );

      // Styles for tablet
      @include above($tabletBreakpoint) {
        @include viewportHeader(
          (
            headerBackgroundColor: map-get($configuration, menuPushTopNavBackgroundTablet),
            headerTextColor: map-get($configuration, menuPushTopNavFontColorTablet),
            headerBorderSides: map-get($configuration, menuPushTopNavBorderSidesTablet),
            headerBorderWidth: map-get($configuration, menuPushTopNavBorderWidthTablet),
            headerBorderStyle: map-get($configuration, menuPushTopNavBorderStyleTablet),
            headerBorderColor: map-get($configuration, menuPushTopNavBorderColorTablet),
            headerShadowStyle: map-get($configuration, menuPushShadowStyleTablet),
            headerShadowXOffset: map-get($configuration, menuPushShadowXoffsetTablet),
            headerShadowYOffset: map-get($configuration, menuPushShadowYoffsetTablet),
            headerShadowBlur: map-get($configuration, menuPushShadowBlurTablet),
            headerShadowSpread: map-get($configuration, menuPushShadowSpreadTablet),
            headerShadowColor: map-get($configuration, menuPushTopNavFontShadowColorTablet)
          )
        );
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        @include viewportHeader(
          (
            headerBackgroundColor: map-get($configuration, menuPushTopNavBackgroundDesktop),
            headerTextColor: map-get($configuration, menuPushTopNavFontColorDesktop),
            headerBorderSides: map-get($configuration, menuPushTopNavBorderSidesDesktop),
            headerBorderWidth: map-get($configuration, menuPushTopNavBorderWidthDesktop),
            headerBorderStyle: map-get($configuration, menuPushTopNavBorderStyleDesktop),
            headerBorderColor: map-get($configuration, menuPushTopNavBorderColorDesktop),
            headerShadowStyle: map-get($configuration, menuPushShadowStyleDesktop),
            headerShadowXOffset: map-get($configuration, menuPushShadowXoffsetDesktop),
            headerShadowYOffset: map-get($configuration, menuPushShadowYoffsetDesktop),
            headerShadowBlur: map-get($configuration, menuPushShadowBlurDesktop),
            headerShadowSpread: map-get($configuration, menuPushShadowSpreadDesktop),
            headerShadowColor: map-get($configuration, menuPushTopNavFontShadowColorDesktop)
          )
        );
      }

      .nav-title {
        @include fontOnly(
          (
            fontFamily: map-get($configuration, menuPushFont),
            fontSize: map-get($configuration, menuPushFontSize),
            fontLineHeight: "43px",
            fontWeight: map-get($configuration, menuPushFontWeight),
            fontStyle: map-get($configuration, menuPushFontStyle),
            fontDecoration: map-get($configuration, menuPushFontDecoration)
          )
        );

        // Styles for tablet
        @include above($tabletBreakpoint) {
          @include fontOnly(
            (
              fontFamily: map-get($configuration, menuPushFontTablet),
              fontSize: map-get($configuration, menuPushFontSizeTablet),
              fontLineHeight: "43px",
              fontWeight: map-get($configuration, menuPushFontWeightTablet),
              fontStyle: map-get($configuration, menuPushFontStyleTablet),
              fontDecoration: map-get($configuration, menuPushFontDecorationTablet)
            )
          );
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          @include fontOnly(
            (
              fontFamily: map-get($configuration, menuPushFontDesktop),
              fontSize: map-get($configuration, menuPushFontSizeDesktop),
              fontLineHeight: "43px",
              fontWeight: map-get($configuration, menuPushFontWeightDesktop),
              fontStyle: map-get($configuration, menuPushFontStyleDesktop),
              fontDecoration: map-get($configuration, menuPushFontDecorationDesktop)
            )
          );
        }
      }

      .nav-left,
      .nav-left-arrow,
      .nav-right-arrow {
        color: map-get($configuration, menuPushBackButtonColor);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, menuPushBackButtonColorTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, menuPushBackButtonColorDesktop);
        }
      }
      .nav-right,
      .nav-center {
        .hamburger {
          .hamburger-inner {
            background-color: map-get($configuration, menuPushButtonColor);

            .hamburger-inner-1,
            .hamburger-inner-2 {
              background-color: map-get($configuration, menuPushButtonColor);
            }

            // Styles for tablet
            @include above($tabletBreakpoint) {
              background-color: map-get($configuration, menuPushButtonColorTablet);

              .hamburger-inner-1,
              .hamburger-inner-2 {
                background-color: map-get($configuration, menuPushButtonColorTablet);
              }
            }

            // Styles for desktop
            @include above($desktopBreakpoint) {
              background-color: map-get($configuration, menuPushButtonColorDesktop);

              .hamburger-inner-1,
              .hamburger-inner-2 {
                background-color: map-get($configuration, menuPushButtonColorDesktop);
              }
            }
          }

          &.is-active {
            .hamburger-inner {
              background-color: map-get($configuration, menuPushCloseButtonColor);

              .hamburger-inner-1,
              .hamburger-inner-2 {
                background-color: map-get($configuration, menuPushCloseButtonColor);
              }

              // Styles for tablet
              @include above($tabletBreakpoint) {
                background-color: map-get($configuration, menuPushCloseButtonColorTablet);

                .hamburger-inner-1,
                .hamburger-inner-2 {
                  background-color: map-get($configuration, menuPushCloseButtonColorTablet);
                }
              }

              // Styles for desktop
              @include above($desktopBreakpoint) {
                background-color: map-get($configuration, menuPushCloseButtonColorDesktop);

                .hamburger-inner-1,
                .hamburger-inner-2 {
                  background-color: map-get($configuration, menuPushCloseButtonColorDesktop);
                }
              }
            }
          }
        }
      }
    }

    .fl-menu-push-in,
    .fl-menu-push-in-left {
      .fl-menu-panel {
        background-color: map-get($configuration, menuPushBackgroundColor);

        &:before {
          border-bottom: 11px solid map-get($configuration, menuPushBackgroundColor);

          // Styles for tablet
          @include above($tabletBreakpoint) {
            border-bottom: 11px solid map-get($configuration, menuPushBackgroundColorTablet);
          }

          // Styles for desktop
          @include above($desktopBreakpoint) {
            border-bottom: 11px solid map-get($configuration, menuPushBackgroundColorDesktop);
          }
        }

        .fl-close-menu {
          .hamburger-inner {
            background-color: map-get($configuration, menuPushCloseButtonColor);

            .hamburger-inner-1,
            .hamburger-inner-2 {
              background-color: map-get($configuration, menuPushCloseButtonColor);
            }
          }
        }

        .fl-list-default {
          color: map-get($configuration, menuPushFontColor);

          ul {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, menuPushFont),
                fontSize: map-get($configuration, menuPushFontSize),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, menuPushFontWeight),
                fontStyle: map-get($configuration, menuPushFontStyle),
                fontDecoration: map-get($configuration, menuPushFontDecoration)
              )
            );

            > li {
              border-bottom: 1px solid rgba(map-get($configuration, menuPushTopNavFontColor), 0.2);

              .fa {
                color: map-get($configuration, menuPushFontColor);
              }
            }
          }
        }

        .fl-app-menu-toolbar {
          background-color: map-get($configuration, menuPushBackgroundColor);

          .copyright {
            color: map-get($configuration, menuPushFooterFontColor);

            a {
              color: map-get($configuration, menuPushFooterFontColor);
            }
          }
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          background-color: map-get($configuration, menuPushBackgroundColorTablet);

          .fl-close-menu {
            .hamburger-inner {
              background-color: map-get($configuration, menuPushCloseButtonColorTablet);

              .hamburger-inner-1,
              .hamburger-inner-2 {
                background-color: map-get($configuration, menuPushCloseButtonColorTablet);
              }
            }
          }

          .fl-list-default {
            color: map-get($configuration, menuPushFontColorTablet);

            ul {
              @include fontOnly(
                (
                  fontFamily: map-get($configuration, menuPushFontTablet),
                  fontSize: map-get($configuration, menuPushFontSizeTablet),
                  fontLineHeight: 1.5,
                  fontWeight: map-get($configuration, menuPushFontWeightTablet),
                  fontStyle: map-get($configuration, menuPushFontStyleTablet),
                  fontDecoration: map-get($configuration, menuPushFontDecorationTablet)
                )
              );

              > li {
                border-bottom: 1px solid
                  rgba(map-get($configuration, menuPushTopNavFontColorTablet), 0.2);

                .fa {
                  color: map-get($configuration, menuPushFontColorTablet);
                }
              }
            }
          }

          .fl-app-menu-toolbar {
            background-color: map-get($configuration, menuPushBackgroundColorTablet);

            .copyright {
              color: map-get($configuration, menuPushFooterFontColorTablet);

              a {
                color: map-get($configuration, menuPushFooterFontColorTablet);
              }
            }
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          background-color: map-get($configuration, menuPushBackgroundColorDesktop);

          .fl-close-menu {
            .hamburger-inner {
              background-color: map-get($configuration, menuPushCloseButtonColorDesktop);

              .hamburger-inner-1,
              .hamburger-inner-2 {
                background-color: map-get($configuration, menuPushCloseButtonColorDesktop);
              }
            }
          }

          .fl-list-default {
            color: map-get($configuration, menuPushFontColorDesktop);

            ul {
              @include fontOnly(
                (
                  fontFamily: map-get($configuration, menuPushFontDesktop),
                  fontSize: map-get($configuration, menuPushFontSizeDesktop),
                  fontLineHeight: 1.5,
                  fontWeight: map-get($configuration, menuPushFontWeightDesktop),
                  fontStyle: map-get($configuration, menuPushFontStyleDesktop),
                  fontDecoration: map-get($configuration, menuPushFontDecorationDesktop)
                )
              );

              > li {
                border-bottom: 1px solid
                  rgba(map-get($configuration, menuPushTopNavFontColorDesktop), 0.2);

                .fa {
                  color: map-get($configuration, menuPushFontColorTablet);
                }
              }
            }
          }

          .fl-app-menu-toolbar {
            background-color: map-get($configuration, menuPushBackgroundColorDesktop);

            .copyright {
              color: map-get($configuration, menuPushFooterFontColorDesktop);

              a {
                color: map-get($configuration, menuPushFooterFontColorDesktop);
              }
            }
          }
        }
      }
    }
  }
}
@include menuPushIn();
