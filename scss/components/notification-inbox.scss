@mixin notificationBox($options: (), $widgetInstanceId: "", $widgetInstanceUUID: "") {
  $configuration: map-merge(
    (
      notificationWidth: $notificationWidth,
      notificationMinWidth: $notificationMinWidth,
      notificationMaxWidth: $notificationMaxWidth,
      notificationMarginTop: $notificationMarginTop,
      notificationMarginRight: $notificationMarginRight,
      notificationMarginBottom: $notificationMarginBottom,
      notificationMarginLeft: $notificationMarginLeft,
      notificationPaddingTop: $notificationPaddingTop,
      notificationPaddingRight: $notificationPaddingRight,
      notificationPaddingBottom: $notificationPaddingBottom,
      notificationPaddingLeft: $notificationPaddingLeft,
      notificationBadgeBackgroundColor: $notificationBadgeBackgroundColor,
      notificationDraftBackgroundColor: $notificationDraftBackgroundColor,
      notificationPublishedBackgroundColor: $notificationPublishedBackgroundColor,
      notificationWidthTablet: $notificationWidthTablet,
      notificationMinWidthTablet: $notificationMinWidthTablet,
      notificationMaxWidthTablet: $notificationMaxWidthTablet,
      notificationMarginTopTablet: $notificationMarginTopTablet,
      notificationMarginRightTablet: $notificationMarginRightTablet,
      notificationMarginBottomTablet: $notificationMarginBottomTablet,
      notificationMarginLeftTablet: $notificationMarginLeftTablet,
      notificationPaddingTopTablet: $notificationPaddingTopTablet,
      notificationPaddingRightTablet: $notificationPaddingRightTablet,
      notificationPaddingBottomTablet: $notificationPaddingBottomTablet,
      notificationPaddingLeftTablet: $notificationPaddingLeftTablet,
      notificationBadgeBackgroundColorTablet: $notificationBadgeBackgroundColorTablet,
      notificationDraftBackgroundColorTablet: $notificationDraftBackgroundColorTablet,
      notificationPublishedBackgroundColorTablet: $notificationPublishedBackgroundColorTablet,
      notificationWidthDesktop: $notificationWidthDesktop,
      notificationMinWidthDesktop: $notificationMinWidthDesktop,
      notificationMaxWidthDesktop: $notificationMaxWidthDesktop,
      notificationMarginTopDesktop: $notificationMarginTopDesktop,
      notificationMarginRightDesktop: $notificationMarginRightDesktop,
      notificationMarginBottomDesktop: $notificationMarginBottomDesktop,
      notificationMarginLeftDesktop: $notificationMarginLeftDesktop,
      notificationPaddingTopDesktop: $notificationPaddingTopDesktop,
      notificationPaddingRightDesktop: $notificationPaddingRightDesktop,
      notificationPaddingBottomDesktop: $notificationPaddingBottomDesktop,
      notificationPaddingLeftDesktop: $notificationPaddingLeftDesktop,
      notificationBadgeBackgroundColorDesktop: $notificationBadgeBackgroundColorDesktop,
      notificationDraftBackgroundColorDesktop: $notificationDraftBackgroundColorDesktop,
      notificationPublishedBackgroundColorDesktop: $notificationPublishedBackgroundColorDesktop
    ),
    $options
  );

  $instanceSelector: '[data-widget-package="com.fliplet.notificationinbox"]';
  @if $widgetInstanceUUID != "" {
    $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
  } @else if $widgetInstanceId != "" {
    $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelector} {
    width: map-get($configuration, notificationWidth);
    min-width: map-get($configuration, notificationMinWidth);
    max-width: map-get($configuration, notificationMaxWidth);
    margin: map-get($configuration, notificationMarginTop)
      map-get($configuration, notificationMarginRight)
      map-get($configuration, notificationMarginBottom)
      map-get($configuration, notificationMarginLeft);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      width: map-get($configuration, notificationWidthTablet);
      min-width: map-get($configuration, notificationMinWidthTablet);
      max-width: map-get($configuration, notificationMaxWidthTablet);
      height: map-get($configuration, notificationHeightTablet);
      min-height: map-get($configuration, notificationMinHeightTablet);
      max-height: map-get($configuration, notificationMaxHeightTablet);
      margin: map-get($configuration, notificationMarginTopTablet)
        map-get($configuration, notificationMarginRightTablet)
        map-get($configuration, notificationMarginBottomTablet)
        map-get($configuration, notificationMarginLeftTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      width: map-get($configuration, notificationWidthDesktop);
      min-width: map-get($configuration, notificationMinWidthDesktop);
      max-width: map-get($configuration, notificationMaxWidthDesktop);
      height: map-get($configuration, notificationHeightDesktop);
      min-height: map-get($configuration, notificationMinHeightDesktop);
      max-height: map-get($configuration, notificationMaxHeightDesktop);
      margin: map-get($configuration, notificationMarginTopDesktop)
        map-get($configuration, notificationMarginRightDesktop)
        map-get($configuration, notificationMarginBottomDesktop)
        map-get($configuration, notificationMarginLeftDesktop);
    }

    .notification-badge {
      background-color: map-get($configuration, notificationBadgeBackgroundColor);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        background-color: map-get($configuration, notificationBadgeBackgroundColorTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        background-color: map-get($configuration, notificationBadgeBackgroundColorDesktop);
      }
    }

    .notifications-holder {
      padding: map-get($configuration, notificationPaddingTop)
        map-get($configuration, notificationPaddingRight)
        map-get($configuration, notificationPaddingBottom)
        map-get($configuration, notificationPaddingLeft);

      .notification[data-notification-status="draft"] {
        background-color: map-get($configuration, notificationDraftBackgroundColor);
      }

      .notification[data-notification-status="published"] {
        background-color: map-get($configuration, notificationPublishedBackgroundColor);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        padding: map-get($configuration, notificationPaddingTopTablet)
          map-get($configuration, notificationPaddingRightTablet)
          map-get($configuration, notificationPaddingBottomTablet)
          map-get($configuration, notificationPaddingLeftTablet);

        .notification[data-notification-status="draft"] {
          background-color: map-get($configuration, notificationDraftBackgroundColorTablet);
        }

        .notification[data-notification-status="published"] {
          background-color: map-get($configuration, notificationPublishedBackgroundColorTablet);
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        padding: map-get($configuration, notificationPaddingTopDesktop)
          map-get($configuration, notificationPaddingRightDesktop)
          map-get($configuration, notificationPaddingBottomDesktop)
          map-get($configuration, notificationPaddingLeftDesktop);

        .notification[data-notification-status="draft"] {
          background-color: map-get($configuration, notificationDraftBackgroundColorDesktop);
        }

        .notification[data-notification-status="published"] {
          background-color: map-get($configuration, notificationPublishedBackgroundColorDesktop);
        }
      }
    }

    .slider {
      background-color: $formInputBorderColor;
    }

    input:checked + .slider {
      background-color: $highlightColor;
    }

    .notifications-toolbar > div > span {
      color: $quickTextColor;
    }
  }
}

@include notificationBox();

.fl-widget-instance[data-type="menu"] .notification-badge {
  background-color: $notificationBadgeBackgroundColorInMenu;
  color: $notificationBadgeTextColorInMenu;

  // Styles for tablet
  @include above($tabletBreakpoint) {
    background-color: $notificationBadgeBackgroundColorInMenuTablet;
    color: $notificationBadgeTextColorInMenuTablet;
  }

  // Styles for desktop
  @include above($desktopBreakpoint) {
    background-color: $notificationBadgeBackgroundColorInMenuDesktop;
    color: $notificationBadgeTextColorInMenuDesktop;
  }
}
