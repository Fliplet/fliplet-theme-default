@mixin list($options: (), $widgetInstanceId: "", $widgetInstanceUUID: "") {
  $configuration: map-merge(
    (
      listWidth: $listWidth,
      listMinWidth: $listMinWidth,
      listMaxWidth: $listMaxWidth,

      listPosition: $listPosition,
      listPositionTop: $listPositionTop,
      listPositionRight: $listPositionRight,
      listPositionBottom: $listPositionBottom,
      listPositionLeft: $listPositionLeft,
      listIndex: $listIndex,
      listDisplay: $listDisplay,

      listMarginTop: $listMarginTop,
      listMarginRight: $listMarginRight,
      listMarginBottom: $listMarginBottom,
      listMarginLeft: $listMarginLeft,
      listPaddingTop: $listPaddingTop,
      listPaddingRight: $listPaddingRight,
      listPaddingBottom: $listPaddingBottom,
      listPaddingLeft: $listPaddingLeft,
      listBackgroundColor: $listBackgroundColor,
      listClickColor: $listClickColor,
      listSeparatorColor: $listSeparatorColor,
      listChevronColor: $listChevronColor,
      titleFont: $titleFont,
      titleSize: $titleSize,
      titleColor: $titleColor,
      titleWeight: $titleWeight,
      titleStyle: $titleStyle,
      titleDecoration: $titleDecoration,
      descriptionFont: $descriptionFont,
      descriptionSize: $descriptionSize,
      descriptionColor: $descriptionColor,
      descriptionWeight: $descriptionWeight,
      descriptionStyle: $descriptionStyle,
      descriptionDecoration: $descriptionDecoration,
      listItemPaddingTop: $listItemPaddingTop,
      listItemPaddingRight: $listItemPaddingRight,
      listItemPaddingBottom: $listItemPaddingBottom,
      listItemPaddingLeft: $listItemPaddingLeft,
      listMyListToggleColor: $listMyListToggleColor,
      listMyListToggleActiveColor: $listMyListToggleActiveColor,
      listMyListSwipeColor: $listMyListSwipeColor,
      listMyListSwipeTextColor: $listMyListSwipeTextColor,
      listMyListSwipeRightColor: $listMyListSwipeRightColor,
      listMyListSwipeRightTextColor: $listMyListSwipeRightTextColor,
      listMyListSwipeLeftColor: $listMyListSwipeLeftColor,
      listMyListSwipeLeftTextColor: $listMyListSwipeLeftTextColor,
      listVisibility: $listVisibility,
      listWidthTablet: $listWidthTablet,
      listMinWidthTablet: $listMinWidthTablet,
      listMaxWidthTablet: $listMaxWidthTablet,

      listPositionTablet: $listPositionTablet,
      listPositionTopTablet: $listPositionTopTablet,
      listPositionRightTablet: $listPositionRightTablet,
      listPositionBottomTablet: $listPositionBottomTablet,
      listPositionLeftTablet: $listPositionLeftTablet,
      listIndexTablet: $listIndexTablet,
      listDisplayTablet: $listDisplayTablet,

      listMarginTopTablet: $listMarginTopTablet,
      listMarginRightTablet: $listMarginRightTablet,
      listMarginBottomTablet: $listMarginBottomTablet,
      listMarginLeftTablet: $listMarginLeftTablet,
      listPaddingTopTablet: $listPaddingTopTablet,
      listPaddingRightTablet: $listPaddingRightTablet,
      listPaddingBottomTablet: $listPaddingBottomTablet,
      listPaddingLeftTablet: $listPaddingLeftTablet,
      listBackgroundColorTablet: $listBackgroundColorTablet,
      listClickColorTablet: $listClickColorTablet,
      listSeparatorColorTablet: $listSeparatorColorTablet,
      listChevronColorTablet: $listChevronColorTablet,
      titleFontTablet: $titleFontTablet,
      titleSizeTablet: $titleSizeTablet,
      titleColorTablet: $titleColorTablet,
      titleWeightTablet: $titleWeightTablet,
      titleStyleTablet: $titleStyleTablet,
      titleDecorationTablet: $titleDecorationTablet,
      descriptionFontTablet: $descriptionFontTablet,
      descriptionSizeTablet: $descriptionSizeTablet,
      descriptionColorTablet: $descriptionColorTablet,
      descriptionWeightTablet: $descriptionWeightTablet,
      descriptionStyleTablet: $descriptionStyleTablet,
      descriptionDecorationTablet: $descriptionDecorationTablet,
      listItemPaddingTopTablet: $listItemPaddingTopTablet,
      listItemPaddingRightTablet: $listItemPaddingRightTablet,
      listItemPaddingBottomTablet: $listItemPaddingBottomTablet,
      listItemPaddingLeftTablet: $listItemPaddingLeftTablet,
      listMyListToggleColorTablet: $listMyListToggleColorTablet,
      listMyListToggleActiveColorTablet: $listMyListToggleActiveColorTablet,
      listMyListSwipeColorTablet: $listMyListSwipeColorTablet,
      listMyListSwipeTextColorTablet: $listMyListSwipeTextColorTablet,
      listMyListSwipeRightColorTablet: $listMyListSwipeRightColorTablet,
      listMyListSwipeRightTextColorTablet: $listMyListSwipeRightTextColorTablet,
      listMyListSwipeLeftColorTablet: $listMyListSwipeLeftColorTablet,
      listMyListSwipeLeftTextColorTablet: $listMyListSwipeLeftTextColorTablet,
      listVisibilityTablet: $listVisibilityTablet,
      listWidthDesktop: $listWidthDesktop,
      listMinWidthDesktop: $listMinWidthDesktop,
      listMaxWidthDesktop: $listMaxWidthDesktop,

      listPositionDesktop: $listPositionDesktop,
      listPositionTopDesktop: $listPositionTopDesktop,
      listPositionRightDesktop: $listPositionRightDesktop,
      listPositionBottomDesktop: $listPositionBottomDesktop,
      listPositionLeftDesktop: $listPositionLeftDesktop,
      listIndexDesktop: $listIndexDesktop,
      listDisplayDesktop: $listDisplayDesktop,

      listMarginTopDesktop: $listMarginTopDesktop,
      listMarginRightDesktop: $listMarginRightDesktop,
      listMarginBottomDesktop: $listMarginBottomDesktop,
      listMarginLeftDesktop: $listMarginLeftDesktop,
      listPaddingTopDesktop: $listPaddingTopDesktop,
      listPaddingRightDesktop: $listPaddingRightDesktop,
      listPaddingBottomDesktop: $listPaddingBottomDesktop,
      listPaddingLeftDesktop: $listPaddingLeftDesktop,
      listBackgroundColorDesktop: $listBackgroundColorDesktop,
      listClickColorDesktop: $listClickColorDesktop,
      listSeparatorColorDesktop: $listSeparatorColorDesktop,
      listChevronColorDesktop: $listChevronColorDesktop,
      titleFontDesktop: $titleFontDesktop,
      titleSizeDesktop: $titleSizeDesktop,
      titleColorDesktop: $titleColorDesktop,
      titleWeightDesktop: $titleWeightDesktop,
      titleStyleDesktop: $titleStyleDesktop,
      titleDecorationDesktop: $titleDecorationDesktop,
      descriptionFontDesktop: $descriptionFontDesktop,
      descriptionSizeDesktop: $descriptionSizeDesktop,
      descriptionColorDesktop: $descriptionColorDesktop,
      descriptionWeightDesktop: $descriptionWeightDesktop,
      descriptionStyleDesktop: $descriptionStyleDesktop,
      descriptionDecorationDesktop: $descriptionDecorationDesktop,
      listItemPaddingTopDesktop: $listItemPaddingTopDesktop,
      listItemPaddingRightDesktop: $listItemPaddingRightDesktop,
      listItemPaddingBottomDesktop: $listItemPaddingBottomDesktop,
      listItemPaddingLeftDesktop: $listItemPaddingLeftDesktop,
      listMyListToggleColorDesktop: $listMyListToggleColorDesktop,
      listMyListToggleActiveColorDesktop: $listMyListToggleActiveColorDesktop,
      listMyListSwipeColorDesktop: $listMyListSwipeColorDesktop,
      listMyListSwipeTextColorDesktop: $listMyListSwipeTextColorDesktop,
      listMyListSwipeRightColorDesktop: $listMyListSwipeRightColorDesktop,
      listMyListSwipeRightTextColorDesktop: $listMyListSwipeRightTextColorDesktop,
      listMyListSwipeLeftColorDesktop: $listMyListSwipeLeftColorDesktop,
      listMyListSwipeLeftTextColorDesktop: $listMyListSwipeLeftTextColorDesktop,
      listVisibilityDesktop: $listVisibilityDesktop
    ),
    $options
  );

  $instanceSelector: '[data-widget-package="com.fliplet.simple-list"]';
  @if $widgetInstanceUUID != "" {
    $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
  } @else if $widgetInstanceId != "" {
    $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelector} {
    position: map-get($configuration, listPosition) !important;
    z-index: map-get($configuration, listIndex);

    @if map-get($configuration, listPosition) == "relative" {
      @if map-get($configuration, listVisibility) == "visible" {
        display: map-get($configuration, listDisplay) !important;
      } @else {
        display: none !important;
      }
    } @else {
      @if map-get($configuration, listVisibility) == "visible" {
        display: block !important;
      } @else {
        display: none !important;
      }

      top: map-get($configuration, listPositionTop);
      right: map-get($configuration, listPositionRight);
      bottom: map-get($configuration, listPositionBottom);
      left: map-get($configuration, listPositionLeft);
    }

    width: map-get($configuration, listWidth);
    min-width: map-get($configuration, listMinWidth);
    max-width: map-get($configuration, listMaxWidth);
    margin: map-get($configuration, listMarginTop) map-get($configuration, listMarginRight)
      map-get($configuration, listMarginBottom) map-get($configuration, listMarginLeft);
    padding: map-get($configuration, listPaddingTop) map-get($configuration, listPaddingRight)
      map-get($configuration, listPaddingBottom) map-get($configuration, listPaddingLeft);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      position: map-get($configuration, listPositionTablet) !important;
      z-index: map-get($configuration, listIndexTablet);

      @if map-get($configuration, listPositionTablet) == "relative" {
        @if map-get($configuration, listVisibilityTablet) == "visible" {
          display: map-get($configuration, listDisplayTablet) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, listVisibilityTablet) == "visible" {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, listPositionTopTablet);
        right: map-get($configuration, listPositionRightTablet);
        bottom: map-get($configuration, listPositionBottomTablet);
        left: map-get($configuration, listPositionLeftTablet);
      }

      width: map-get($configuration, listWidthTablet);
      min-width: map-get($configuration, listMinWidthTablet);
      max-width: map-get($configuration, listMaxWidthTablet);
      margin: map-get($configuration, listMarginTopTablet)
        map-get($configuration, listMarginRightTablet)
        map-get($configuration, listMarginBottomTablet)
        map-get($configuration, listMarginLeftTablet);
      padding: map-get($configuration, listPaddingTopTablet)
        map-get($configuration, listPaddingRightTablet)
        map-get($configuration, listPaddingBottomTablet)
        map-get($configuration, listPaddingLeftTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      position: map-get($configuration, listPositionDesktop) !important;
      z-index: map-get($configuration, listIndexDesktop);

      @if map-get($configuration, listPositionDesktop) == "relative" {
        @if map-get($configuration, listVisibilityDesktop) == "visible" {
          display: map-get($configuration, listDisplayDesktop) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, listVisibilityDesktop) == "visible" {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, listPositionTopDesktop);
        right: map-get($configuration, listPositionRightDesktop);
        bottom: map-get($configuration, listPositionBottomDesktop);
        left: map-get($configuration, listPositionLeftDesktop);
      }

      width: map-get($configuration, listWidthDesktop);
      min-width: map-get($configuration, listMinWidthDesktop);
      max-width: map-get($configuration, listMaxWidthDesktop);
      margin: map-get($configuration, listMarginTopDesktop)
        map-get($configuration, listMarginRightDesktop)
        map-get($configuration, listMarginBottomDesktop)
        map-get($configuration, listMarginLeftDesktop);
      padding: map-get($configuration, listPaddingTopDesktop)
        map-get($configuration, listPaddingRightDesktop)
        map-get($configuration, listPaddingBottomDesktop)
        map-get($configuration, listPaddingLeftDesktop);
    }

    .list.list-default {
      ul > li {
        border-bottom: 1px solid map-get($configuration, listSeparatorColor);
        background-color: map-get($configuration, listBackgroundColor);
        padding: map-get($configuration, listItemPaddingTop)
          map-get($configuration, listItemPaddingRight)
          map-get($configuration, listItemPaddingBottom)
          map-get($configuration, listItemPaddingLeft);

        &.linked {
          padding-right: calc(#{map-get($configuration, listItemPaddingRight)} + 34px);

          &:active {
            background-color: map-get($configuration, listClickColor);
          }

          &:after {
            color: map-get($configuration, listChevronColor);
          }

          .list-icon {
            color: map-get($configuration, listChevronColor);
          }
        }

        .list-title {
          @include fontOnly(
            (
              fontFamily: map-get($configuration, titleFont),
              fontSize: map-get($configuration, titleSize),
              fontLineHeight: 1.5,
              fontWeight: map-get($configuration, titleWeight),
              fontStyle: map-get($configuration, titleStyle),
              fontDecoration: map-get($configuration, titleDecoration)
            )
          );
          color: map-get($configuration, titleColor);
        }

        p + p {
          @include fontOnly(
            (
              fontFamily: map-get($configuration, descriptionFont),
              fontSize: map-get($configuration, descriptionSize),
              fontLineHeight: 1.5,
              fontWeight: map-get($configuration, descriptionWeight),
              fontStyle: map-get($configuration, descriptionStyle),
              fontDecoration: map-get($configuration, descriptionDecoration)
            )
          );
          color: map-get($configuration, descriptionColor);
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          border-bottom: 1px solid map-get($configuration, listSeparatorColorTablet);
          background-color: map-get($configuration, listBackgroundColorTablet);
          padding: map-get($configuration, listItemPaddingTopTablet)
            map-get($configuration, listItemPaddingRightTablet)
            map-get($configuration, listItemPaddingBottomTablet)
            map-get($configuration, listItemPaddingLeftTablet);

          &.linked {
            padding-right: calc(#{map-get($configuration, listItemPaddingRightTablet)} + 34px);

            &:active {
              background-color: map-get($configuration, listClickColorTablet);
            }

            &:after {
              color: map-get($configuration, listChevronColorTablet);
            }

            .list-icon {
              color: map-get($configuration, listChevronColorTablet);
            }
          }

          .list-title {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, titleFontTablet),
                fontSize: map-get($configuration, titleSizeTablet),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, titleWeightTablet),
                fontStyle: map-get($configuration, titleStyleTablet),
                fontDecoration: map-get($configuration, titleDecorationTablet)
              )
            );
            color: map-get($configuration, titleColorTablet);
          }

          p + p {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, descriptionFontTablet),
                fontSize: map-get($configuration, descriptionSizeTablet),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, descriptionWeightTablet),
                fontStyle: map-get($configuration, descriptionStyleTablet),
                fontDecoration: map-get($configuration, descriptionDecorationTablet)
              )
            );
            color: map-get($configuration, descriptionColorTablet);
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          border-bottom: 1px solid map-get($configuration, listSeparatorColorDesktop);
          background-color: map-get($configuration, listBackgroundColorDesktop);
          padding: map-get($configuration, listItemPaddingTopDesktop)
            map-get($configuration, listItemPaddingRightDesktop)
            map-get($configuration, listItemPaddingBottomDesktop)
            map-get($configuration, listItemPaddingLeftDesktop);

          &.linked {
            padding-right: calc(#{map-get($configuration, listItemPaddingRightDesktop)} + 34px);

            &:active {
              background-color: map-get($configuration, listClickColorDesktop);
            }

            &:after {
              color: map-get($configuration, listChevronColorDesktop);
            }

            .list-icon {
              color: map-get($configuration, listChevronColorDesktop);
            }
          }

          .list-title {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, titleFontDesktop),
                fontSize: map-get($configuration, titleSizeDesktop),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, titleWeightDesktop),
                fontStyle: map-get($configuration, titleStyleDesktop),
                fontDecoration: map-get($configuration, titleDecorationDesktop)
              )
            );
            color: map-get($configuration, titleColorDesktop);
          }

          p + p {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, descriptionFontDesktop),
                fontSize: map-get($configuration, descriptionSizeDesktop),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, descriptionWeightDesktop),
                fontStyle: map-get($configuration, descriptionStyleDesktop),
                fontDecoration: map-get($configuration, descriptionDecorationDesktop)
              )
            );
            color: map-get($configuration, descriptionColorDesktop);
          }
        }
      }

      ul.list-save-filter {
        border: 1px solid map-get($configuration, listMyListToggleColor);

        li {
          border-left: 1px solid map-get($configuration, listMyListToggleColor);
          background: $bodyBackground;
          color: map-get($configuration, listMyListToggleColor);

          &.active {
            background: map-get($configuration, listMyListToggleColor);
            color: map-get($configuration, listMyListToggleActiveColor);
          }
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          border: 1px solid map-get($configuration, listMyListToggleColorTablet);

          li {
            border-left: 1px solid map-get($configuration, listMyListToggleColorTablet);
            background: $bodyBackgroundTablet;
            color: map-get($configuration, listMyListToggleColorTablet);

            &.active {
              background: map-get($configuration, listMyListToggleColorTablet);
              color: map-get($configuration, listMyListToggleActiveColorTablet);
            }
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          border: 1px solid map-get($configuration, listMyListToggleColorDesktop);

          li {
            border-left: 1px solid map-get($configuration, listMyListToggleColorDesktop);
            background: $bodyBackgroundDesktop;
            color: map-get($configuration, listMyListToggleColorDesktop);

            &.active {
              background: map-get($configuration, listMyListToggleColorDesktop);
              color: map-get($configuration, listMyListToggleActiveColorDesktop);
            }
          }
        }
      }

      ul.list-swipe .swipe-action {
        background: map-get($configuration, listMyListSwipeColor);
        color: map-get($configuration, listMyListSwipeTextColor);

        &.swipe-action-right.active {
          background: map-get($configuration, listMyListSwipeRightColor);
          color: map-get($configuration, listMyListSwipeRightTextColor);
        }

        &.swipe-action-left.active {
          background: map-get($configuration, listMyListSwipeLeftColor);
          color: map-get($configuration, listMyListSwipeLeftTextColor);
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          background: map-get($configuration, listMyListSwipeColorTablet);
          color: map-get($configuration, listMyListSwipeTextColorTablet);

          &.swipe-action-right.active {
            background: map-get($configuration, listMyListSwipeRightColorTablet);
            color: map-get($configuration, listMyListSwipeRightTextColorTablet);
          }

          &.swipe-action-left.active {
            background: map-get($configuration, listMyListSwipeLeftColorTablet);
            color: map-get($configuration, listMyListSwipeLeftTextColorTablet);
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          background: map-get($configuration, listMyListSwipeColorDesktop);
          color: map-get($configuration, listMyListSwipeTextColorDesktop);

          &.swipe-action-right.active {
            background: map-get($configuration, listMyListSwipeRightColorDesktop);
            color: map-get($configuration, listMyListSwipeRightTextColorDesktop);
          }

          &.swipe-action-left.active {
            background: map-get($configuration, listMyListSwipeLeftColorDesktop);
            color: map-get($configuration, listMyListSwipeLeftTextColorDesktop);
          }
        }
      }
    }

    /* 02 - PDF FILE LIST */
    .list-search {
      border-bottom: 2px solid map-get($configuration, listSeparatorColor);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        border-bottom: 2px solid map-get($configuration, listSeparatorColorTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        border-bottom: 2px solid map-get($configuration, listSeparatorColorDesktop);
      }
    }

    .btn.btn-link.search-cancel {
      color: map-get($configuration, titleColor);

      &:hover,
      &:focus,
      &:active:hover,
      &:active:focus {
        color: $linkHoverColor;
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, titleColorTablet);

        &:hover,
        &:focus,
        &:active:hover,
        &:active:focus {
          color: $linkHoverColorDesktop;
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, titleColorDesktop);

        &:hover,
        &:focus,
        &:active:hover,
        &:active:focus {
          color: $linkHoverColorDesktop;
        }
      }
    }
  }
}

@include list();
