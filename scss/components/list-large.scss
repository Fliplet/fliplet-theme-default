@mixin listLargeThumbs($options: (), $widgetInstanceId: "", $widgetInstanceUUID: "") {
  $configuration: map-merge(
    (
      listLargeWidth: $listLargeWidth,
      listLargeMinWidth: $listLargeMinWidth,
      listLargeMaxWidth: $listLargeMaxWidth,
      listLargePosition: $listLargePosition,
      listLargePositionTop: $listLargePositionTop,
      listLargePositionRight: $listLargePositionRight,
      listLargePositionBottom: $listLargePositionBottom,
      listLargePositionLeft: $listLargePositionLeft,
      listLargeIndex: $listLargeIndex,
      listLargeDisplay: $listLargeDisplay,
      listLargeMarginTop: $listLargeMarginTop,
      listLargeMarginRight: $listLargeMarginRight,
      listLargeMarginBottom: $listLargeMarginBottom,
      listLargeMarginLeft: $listLargeMarginLeft,
      listLargePaddingTop: $listLargePaddingTop,
      listLargePaddingRight: $listLargePaddingRight,
      listLargePaddingBottom: $listLargePaddingBottom,
      listLargePaddingLeft: $listLargePaddingLeft,
      listLargeBackgroundColor: $listLargeBackgroundColor,
      listLargeClickColor: $listLargeClickColor,
      listLargeSeparatorColor: $listLargeSeparatorColor,
      listLargeChevronColor: $listLargeChevronColor,
      listLargeTitleFont: $listLargeTitleFont,
      listLargeTitleSize: $listLargeTitleSize,
      listLargeTitleColor: $listLargeTitleColor,
      listLargeTitleWeight: $listLargeTitleWeight,
      listLargeTitleStyle: $listLargeTitleStyle,
      listLargeTitleDecoration: $listLargeTitleDecoration,
      listLargeDescriptionFont: $listLargeDescriptionFont,
      listLargeDescriptionSize: $listLargeDescriptionSize,
      listLargeDescriptionColor: $listLargeDescriptionColor,
      listLargeDescriptionWeight: $listLargeDescriptionWeight,
      listLargeDescriptionStyle: $listLargeDescriptionStyle,
      listLargeDescriptionDecoration: $listLargeDescriptionDecoration,
      listLargeIconSize: $listLargeIconSize,
      listLargeIconBackgroundColor: $listLargeIconBackgroundColor,
      listLargeIconColor: $listLargeIconColor,
      listLargeItemPaddingTop: $listLargeItemPaddingTop,
      listLargeItemPaddingRight: $listLargeItemPaddingRight,
      listLargeItemPaddingBottom: $listLargeItemPaddingBottom,
      listLargeItemPaddingLeft: $listLargeItemPaddingLeft,
      listLargeMyListToggleColor: $listLargeMyListToggleColor,
      listLargeMyListToggleActiveColor: $listLargeMyListToggleActiveColor,
      listLargeMyListSwipeColor: $listLargeMyListSwipeColor,
      listLargeMyListSwipeTextColor: $listLargeMyListSwipeTextColor,
      listLargeMyListSwipeRightColor: $listLargeMyListSwipeRightColor,
      listLargeMyListSwipeRightTextColor: $listLargeMyListSwipeRightTextColor,
      listLargeMyListSwipeLeftColor: $listLargeMyListSwipeLeftColor,
      listLargeMyListSwipeLeftTextColor: $listLargeMyListSwipeLeftTextColor,
      listLargeVisibility: $listLargeVisibility,
      listLargeWidthTablet: $listLargeWidthTablet,
      listLargeMinWidthTablet: $listLargeMinWidthTablet,
      listLargeMaxWidthTablet: $listLargeMaxWidthTablet,
      listLargePositionTablet: $listLargePositionTablet,
      listLargePositionTopTablet: $listLargePositionTopTablet,
      listLargePositionRightTablet: $listLargePositionRightTablet,
      listLargePositionBottomTablet: $listLargePositionBottomTablet,
      listLargePositionLeftTablet: $listLargePositionLeftTablet,
      listLargeIndexTablet: $listLargeIndexTablet,
      listLargeDisplayTablet: $listLargeDisplayTablet,
      listLargeMarginTopTablet: $listLargeMarginTopTablet,
      listLargeMarginRightTablet: $listLargeMarginRightTablet,
      listLargeMarginBottomTablet: $listLargeMarginBottomTablet,
      listLargeMarginLeftTablet: $listLargeMarginLeftTablet,
      listLargePaddingTopTablet: $listLargePaddingTopTablet,
      listLargePaddingRightTablet: $listLargePaddingRightTablet,
      listLargePaddingBottomTablet: $listLargePaddingBottomTablet,
      listLargePaddingLeftTablet: $listLargePaddingLeftTablet,
      listLargeBackgroundColorTablet: $listLargeBackgroundColorTablet,
      listLargeClickColorTablet: $listLargeClickColorTablet,
      listLargeSeparatorColorTablet: $listLargeSeparatorColorTablet,
      listLargeChevronColorTablet: $listLargeChevronColorTablet,
      listLargeTitleFontTablet: $listLargeTitleFontTablet,
      listLargeTitleSizeTablet: $listLargeTitleSizeTablet,
      listLargeTitleColorTablet: $listLargeTitleColorTablet,
      listLargeTitleWeightTablet: $listLargeTitleWeightTablet,
      listLargeTitleStyleTablet: $listLargeTitleStyleTablet,
      listLargeTitleDecorationTablet: $listLargeTitleDecorationTablet,
      listLargeDescriptionFontTablet: $listLargeDescriptionFontTablet,
      listLargeDescriptionSizeTablet: $listLargeDescriptionSizeTablet,
      listLargeDescriptionColorTablet: $listLargeDescriptionColorTablet,
      listLargeDescriptionWeightTablet: $listLargeDescriptionWeightTablet,
      listLargeDescriptionStyleTablet: $listLargeDescriptionStyleTablet,
      listLargeDescriptionDecorationTablet: $listLargeDescriptionDecorationTablet,
      listLargeIconSizeTablet: $listLargeIconSizeTablet,
      listLargeIconBackgroundColorTablet: $listLargeIconBackgroundColorTablet,
      listLargeIconColorTablet: $listLargeIconColorTablet,
      listLargeItemPaddingTopTablet: $listLargeItemPaddingTopTablet,
      listLargeItemPaddingRightTablet: $listLargeItemPaddingRightTablet,
      listLargeItemPaddingBottomTablet: $listLargeItemPaddingBottomTablet,
      listLargeItemPaddingLeftTablet: $listLargeItemPaddingLeftTablet,
      listLargeMyListToggleColorTablet: $listLargeMyListToggleColorTablet,
      listLargeMyListToggleActiveColorTablet: $listLargeMyListToggleActiveColorTablet,
      listLargeMyListSwipeColorTablet: $listLargeMyListSwipeColorTablet,
      listLargeMyListSwipeTextColorTablet: $listLargeMyListSwipeTextColorTablet,
      listLargeMyListSwipeRightColorTablet: $listLargeMyListSwipeRightColorTablet,
      listLargeMyListSwipeRightTextColorTablet: $listLargeMyListSwipeRightTextColorTablet,
      listLargeMyListSwipeLeftColorTablet: $listLargeMyListSwipeLeftColorTablet,
      listLargeMyListSwipeLeftTextColorTablet: $listLargeMyListSwipeLeftTextColorTablet,
      listLargeVisibilityTablet: $listLargeVisibilityTablet,
      listLargeWidthDesktop: $listLargeWidthDesktop,
      listLargeMinWidthDesktop: $listLargeMinWidthDesktop,
      listLargeMaxWidthDesktop: $listLargeMaxWidthDesktop,
      listLargePositionDesktop: $listLargePositionDesktop,
      listLargePositionTopDesktop: $listLargePositionTopDesktop,
      listLargePositionRightDesktop: $listLargePositionRightDesktop,
      listLargePositionBottomDesktop: $listLargePositionBottomDesktop,
      listLargePositionLeftDesktop: $listLargePositionLeftDesktop,
      listLargeIndexDesktop: $listLargeIndexDesktop,
      listLargeDisplayDesktop: $listLargeDisplayDesktop,
      listLargeMarginTopDesktop: $listLargeMarginTopDesktop,
      listLargeMarginRightDesktop: $listLargeMarginRightDesktop,
      listLargeMarginBottomDesktop: $listLargeMarginBottomDesktop,
      listLargeMarginLeftDesktop: $listLargeMarginLeftDesktop,
      listLargePaddingTopDesktop: $listLargePaddingTopDesktop,
      listLargePaddingRightDesktop: $listLargePaddingRightDesktop,
      listLargePaddingBottomDesktop: $listLargePaddingBottomDesktop,
      listLargePaddingLeftDesktop: $listLargePaddingLeftDesktop,
      listLargeBackgroundColorDesktop: $listLargeBackgroundColorDesktop,
      listLargeClickColorDesktop: $listLargeClickColorDesktop,
      listLargeSeparatorColorDesktop: $listLargeSeparatorColorDesktop,
      listLargeChevronColorDesktop: $listLargeChevronColorDesktop,
      listLargeTitleFontDesktop: $listLargeTitleFontDesktop,
      listLargeTitleSizeDesktop: $listLargeTitleSizeDesktop,
      listLargeTitleColorDesktop: $listLargeTitleColorDesktop,
      listLargeTitleWeightDesktop: $listLargeTitleWeightDesktop,
      listLargeTitleStyleDesktop: $listLargeTitleStyleDesktop,
      listLargeTitleDecorationDesktop: $listLargeTitleDecorationDesktop,
      listLargeDescriptionFontDesktop: $listLargeDescriptionFontDesktop,
      listLargeDescriptionSizeDesktop: $listLargeDescriptionSizeDesktop,
      listLargeDescriptionColorDesktop: $listLargeDescriptionColorDesktop,
      listLargeDescriptionWeightDesktop: $listLargeDescriptionWeightDesktop,
      listLargeDescriptionStyleDesktop: $listLargeDescriptionStyleDesktop,
      listLargeDescriptionDecorationDesktop: $listLargeDescriptionDecorationDesktop,
      listLargeIconSizeDesktop: $listLargeIconSizeDesktop,
      listLargeIconBackgroundColorDesktop: $listLargeIconBackgroundColorDesktop,
      listLargeIconColorDesktop: $listLargeIconColorDesktop,
      listLargeItemPaddingTopDesktop: $listLargeItemPaddingTopDesktop,
      listLargeItemPaddingRightDesktop: $listLargeItemPaddingRightDesktop,
      listLargeItemPaddingBottomDesktop: $listLargeItemPaddingBottomDesktop,
      listLargeItemPaddingLeftDesktop: $listLargeItemPaddingLeftDesktop,
      listLargeMyListToggleColorDesktop: $listLargeMyListToggleColorDesktop,
      listLargeMyListToggleActiveColorDesktop: $listLargeMyListToggleActiveColorDesktop,
      listLargeMyListSwipeColorDesktop: $listLargeMyListSwipeColorDesktop,
      listLargeMyListSwipeTextColorDesktop: $listLargeMyListSwipeTextColorDesktop,
      listLargeMyListSwipeRightColorDesktop: $listLargeMyListSwipeRightColorDesktop,
      listLargeMyListSwipeRightTextColorDesktop: $listLargeMyListSwipeRightTextColorDesktop,
      listLargeMyListSwipeLeftColorDesktop: $listLargeMyListSwipeLeftColorDesktop,
      listLargeMyListSwipeLeftTextColorDesktop: $listLargeMyListSwipeLeftTextColorDesktop,
      listLargeVisibilityDesktop: $listLargeVisibilityDesktop
    ),
    $options
  );

  $instanceSelector: '[data-widget-package="com.fliplet.list-large-thumbs"]';
  @if $widgetInstanceUUID != "" {
    $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
  } @else if $widgetInstanceId != "" {
    $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelector} {
    position: map-get($configuration, listLargePosition) !important;
    z-index: map-get($configuration, listLargeIndex);

    @if map-get($configuration, listLargePosition) == "relative" {
      @if map-get($configuration, listLargeVisibility) == "visible" {
        display: map-get($configuration, listLargeDisplay) !important;
      } @else {
        display: none !important;
      }
    } @else {
      @if map-get($configuration, listLargeVisibility) == "visible" {
        display: block !important;
      } @else {
        display: none !important;
      }

      top: map-get($configuration, listLargePositionTop);
      right: map-get($configuration, listLargePositionRight);
      bottom: map-get($configuration, listLargePositionBottom);
      left: map-get($configuration, listLargePositionLeft);
    }

    width: map-get($configuration, listLargeWidth);
    min-width: map-get($configuration, listLargeMinWidth);
    max-width: map-get($configuration, listLargeMaxWidth);
    margin: map-get($configuration, listLargeMarginTop)
      map-get($configuration, listLargeMarginRight) map-get($configuration, listLargeMarginBottom)
      map-get($configuration, listLargeMarginLeft);
    padding: map-get($configuration, listLargePaddingTop)
      map-get($configuration, listLargePaddingRight) map-get($configuration, listLargePaddingBottom)
      map-get($configuration, listLargePaddingLeft);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      position: map-get($configuration, listLargePositionTablet) !important;
      z-index: map-get($configuration, listLargeIndexTablet);

      @if map-get($configuration, listLargePositionTablet) == "relative" {
        @if map-get($configuration, listLargeVisibilityTablet) == "visible" {
          display: map-get($configuration, listLargeDisplayTablet) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, listLargeVisibilityTablet) == "visible" {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, listLargePositionTopTablet);
        right: map-get($configuration, listLargePositionRightTablet);
        bottom: map-get($configuration, listLargePositionBottomTablet);
        left: map-get($configuration, listLargePositionLeftTablet);
      }

      width: map-get($configuration, listLargeWidthTablet);
      min-width: map-get($configuration, listLargeMinWidthTablet);
      max-width: map-get($configuration, listLargeMaxWidthTablet);
      margin: map-get($configuration, listLargeMarginTopTablet)
        map-get($configuration, listLargeMarginRightTablet)
        map-get($configuration, listLargeMarginBottomTablet)
        map-get($configuration, listLargeMarginLeftTablet);
      padding: map-get($configuration, listLargePaddingTopTablet)
        map-get($configuration, listLargePaddingRightTablet)
        map-get($configuration, listLargePaddingBottomTablet)
        map-get($configuration, listLargePaddingLeftTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      position: map-get($configuration, listLargePositionDesktop) !important;
      z-index: map-get($configuration, listLargeIndexDesktop);

      @if map-get($configuration, listLargePositionDesktop) == "relative" {
        @if map-get($configuration, listLargeVisibilityDesktop) == "visible" {
          display: map-get($configuration, listLargeDisplayDesktop) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, listLargeVisibilityDesktop) == "visible" {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, listLargePositionTopDesktop);
        right: map-get($configuration, listLargePositionRightDesktop);
        bottom: map-get($configuration, listLargePositionBottomDesktop);
        left: map-get($configuration, listLargePositionLeftDesktop);
      }

      width: map-get($configuration, listLargeWidthDesktop);
      min-width: map-get($configuration, listLargeMinWidthDesktop);
      max-width: map-get($configuration, listLargeMaxWidthDesktop);
      margin: map-get($configuration, listLargeMarginTopDesktop)
        map-get($configuration, listLargeMarginRightDesktop)
        map-get($configuration, listLargeMarginBottomDesktop)
        map-get($configuration, listLargeMarginLeftDesktop);
      padding: map-get($configuration, listLargePaddingTopDesktop)
        map-get($configuration, listLargePaddingRightDesktop)
        map-get($configuration, listLargePaddingBottomDesktop)
        map-get($configuration, listLargePaddingLeftDesktop);
    }

    .list.list-thumb-l {
      ul > li {
        border-bottom: 1px solid map-get($configuration, listLargeSeparatorColor);
        background-color: map-get($configuration, listLargeBackgroundColor);
        padding: map-get($configuration, listLargeItemPaddingTop)
          map-get($configuration, listLargeItemPaddingRight)
          map-get($configuration, listLargeItemPaddingBottom)
          calc(#{map-get($configuration, listLargeItemPaddingLeft)} + 71px);

        &.linked {
          padding-right: calc(#{map-get($configuration, listLargeItemPaddingRight)} + 34px);

          &:active {
            background-color: map-get($configuration, listLargeClickColor);
          }

          &:after {
            color: map-get($configuration, listLargeChevronColor);
          }

          .list-icon {
            color: map-get($configuration, listLargeChevronColor);
          }
        }

        .list-image {
          background-color: map-get($configuration, listLargeIconBackgroundColor);

          .fl-list-icon {
            color: map-get($configuration, listLargeIconColor);
            font-size: map-get($configuration, listLargeIconSize);
          }
        }

        .list-title {
          @include fontOnly(
            (
              fontFamily: map-get($configuration, listLargeTitleFont),
              fontSize: map-get($configuration, listLargeTitleSize),
              fontLineHeight: 1.5,
              fontWeight: map-get($configuration, listLargeTitleWeight),
              fontStyle: map-get($configuration, listLargeTitleStyle),
              fontDecoration: map-get($configuration, listLargeTitleDecoration)
            )
          );
          color: map-get($configuration, listLargeTitleColor);
        }

        p + p {
          @include fontOnly(
            (
              fontFamily: map-get($configuration, listLargeDescriptionFont),
              fontSize: map-get($configuration, listLargeDescriptionSize),
              fontLineHeight: 1.5,
              fontWeight: map-get($configuration, listLargeDescriptionWeight),
              fontStyle: map-get($configuration, listLargeDescriptionStyle),
              fontDecoration: map-get($configuration, listLargeDescriptionDecoration)
            )
          );
          color: map-get($configuration, listLargeDescriptionColor);
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          border-bottom: 1px solid map-get($configuration, listLargeSeparatorColorTablet);
          background-color: map-get($configuration, listLargeBackgroundColorTablet);
          padding: map-get($configuration, listLargeItemPaddingTopTablet)
            map-get($configuration, listLargeItemPaddingRightTablet)
            map-get($configuration, listLargeItemPaddingBottomTablet)
            calc(#{map-get($configuration, listLargeItemPaddingLeftTablet)} + 71px);

          &.linked {
            padding-right: calc(#{map-get($configuration, listLargeItemPaddingRightTablet)} + 34px);

            &:active {
              background-color: map-get($configuration, listLargeClickColorTablet);
            }

            &:after {
              color: map-get($configuration, listLargeChevronColorTablet);
            }

            .list-icon {
              color: map-get($configuration, listLargeChevronColorTablet);
            }
          }

          .list-image {
            background-color: map-get($configuration, listLargeIconBackgroundColorTablet);

            .fl-list-icon {
              color: map-get($configuration, listLargeIconColorTablet);
              font-size: map-get($configuration, listLargeIconSizeTablet);
            }
          }

          .list-title {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, listLargeTitleFontTablet),
                fontSize: map-get($configuration, listLargeTitleSizeTablet),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, listLargeTitleWeightTablet),
                fontStyle: map-get($configuration, listLargeTitleStyleTablet),
                fontDecoration: map-get($configuration, listLargeTitleDecorationTablet)
              )
            );
            color: map-get($configuration, listLargeTitleColorTablet);
          }

          p + p {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, listLargeDescriptionFontTablet),
                fontSize: map-get($configuration, listLargeDescriptionSizeTablet),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, listLargeDescriptionWeightTablet),
                fontStyle: map-get($configuration, listLargeDescriptionStyleTablet),
                fontDecoration: map-get($configuration, listLargeDescriptionDecorationTablet)
              )
            );
            color: map-get($configuration, listLargeDescriptionColorTablet);
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          border-bottom: 1px solid map-get($configuration, listLargeSeparatorColorDesktop);
          background-color: map-get($configuration, listLargeBackgroundColorDesktop);
          padding: map-get($configuration, listLargeItemPaddingTopDesktop)
            map-get($configuration, listLargeItemPaddingRightDesktop)
            map-get($configuration, listLargeItemPaddingBottomDesktop)
            calc(#{map-get($configuration, listLargeItemPaddingLeftDesktop)} + 71px);

          &.linked {
            padding-right: calc(
              #{map-get($configuration, listLargeItemPaddingRightDesktop)} + 34px
            );

            &:active {
              background-color: map-get($configuration, listLargeClickColorDesktop);
            }

            &:after {
              color: map-get($configuration, listLargeChevronColorDesktop);
            }

            .list-icon {
              color: map-get($configuration, listLargeChevronColorDesktop);
            }
          }

          .list-image {
            background-color: map-get($configuration, listLargeIconBackgroundColorDesktop);

            .fl-list-icon {
              color: map-get($configuration, listLargeIconColorDesktop);
              font-size: map-get($configuration, listLargeIconSizeDesktop);
            }
          }

          .list-title {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, listLargeTitleFontDesktop),
                fontSize: map-get($configuration, listLargeTitleSizeDesktop),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, listLargeTitleWeightDesktop),
                fontStyle: map-get($configuration, listLargeTitleStyleDesktop),
                fontDecoration: map-get($configuration, listLargeTitleDecorationDesktop)
              )
            );
            color: map-get($configuration, listLargeTitleColorDesktop);
          }

          p + p {
            @include fontOnly(
              (
                fontFamily: map-get($configuration, listLargeDescriptionFontDesktop),
                fontSize: map-get($configuration, listLargeDescriptionSizeDesktop),
                fontLineHeight: 1.5,
                fontWeight: map-get($configuration, listLargeDescriptionWeightDesktop),
                fontStyle: map-get($configuration, listLargeDescriptionStyleDesktop),
                fontDecoration: map-get($configuration, listLargeDescriptionDecorationDesktop)
              )
            );
            color: map-get($configuration, listLargeDescriptionColorDesktop);
          }
        }
      }

      ul.list-save-filter {
        border: 1px solid map-get($configuration, listLargeMyListToggleColor);

        li {
          border-left: 1px solid map-get($configuration, listLargeMyListToggleColor);
          background: $bodyBackground;
          color: map-get($configuration, listLargeMyListToggleColor);

          &.active {
            background: map-get($configuration, listLargeMyListToggleColor);
            color: map-get($configuration, listLargeMyListToggleActiveColor);
          }
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          border: 1px solid map-get($configuration, listLargeMyListToggleColorTablet);

          li {
            border-left: 1px solid map-get($configuration, listLargeMyListToggleColorTablet);
            background: $bodyBackgroundTablet;
            color: map-get($configuration, listLargeMyListToggleColorTablet);

            &.active {
              background: map-get($configuration, listLargeMyListToggleColorTablet);
              color: map-get($configuration, listLargeMyListToggleActiveColorTablet);
            }
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          border: 1px solid map-get($configuration, listLargeMyListToggleColorDesktop);

          li {
            border-left: 1px solid map-get($configuration, listLargeMyListToggleColorDesktop);
            background: $bodyBackgroundDesktop;
            color: map-get($configuration, listLargeMyListToggleColorDesktop);

            &.active {
              background: map-get($configuration, listLargeMyListToggleColorDesktop);
              color: map-get($configuration, listLargeMyListToggleActiveColorDesktop);
            }
          }
        }
      }

      ul.list-swipe .swipe-action {
        background: map-get($configuration, listLargeMyListSwipeColor);
        color: map-get($configuration, listLargeMyListSwipeTextColor);

        &.swipe-action-right.active {
          background: map-get($configuration, listLargeMyListSwipeRightColor);
          color: map-get($configuration, listLargeMyListSwipeRightTextColor);
        }

        &.swipe-action-left.active {
          background: map-get($configuration, listLargeMyListSwipeLeftColor);
          color: map-get($configuration, listLargeMyListSwipeLeftTextColor);
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          background: map-get($configuration, listLargeMyListSwipeColorTablet);
          color: map-get($configuration, listLargeMyListSwipeTextColorTablet);

          &.swipe-action-right.active {
            background: map-get($configuration, listLargeMyListSwipeRightColorTablet);
            color: map-get($configuration, listLargeMyListSwipeRightTextColorTablet);
          }

          &.swipe-action-left.active {
            background: map-get($configuration, listLargeMyListSwipeLeftColorTablet);
            color: map-get($configuration, listLargeMyListSwipeLeftTextColorTablet);
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          background: map-get($configuration, listLargeMyListSwipeColorDesktop);
          color: map-get($configuration, listLargeMyListSwipeTextColorDesktop);

          &.swipe-action-right.active {
            background: map-get($configuration, listLargeMyListSwipeRightColorDesktop);
            color: map-get($configuration, listLargeMyListSwipeRightTextColorDesktop);
          }

          &.swipe-action-left.active {
            background: map-get($configuration, listLargeMyListSwipeLeftColorDesktop);
            color: map-get($configuration, listLargeMyListSwipeLeftTextColorDesktop);
          }
        }
      }
    }
  }
}

@include listLargeThumbs();
